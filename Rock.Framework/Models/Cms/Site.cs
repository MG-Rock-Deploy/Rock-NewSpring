//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity.ModelConfiguration;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

using Rock.Models;

namespace Rock.Models.Cms
{
    /// <summary>
    /// Site POCO Entity.
    /// </summary>
    [Table( "cmsSite" )]
    public partial class Site : ModelWithAttributes<Site>, IAuditable
    {
		/// <summary>
		/// Gets or sets the System.
		/// </summary>
		/// <value>
		/// System.
		/// </value>
		[DataMember]
		public bool System { get; set; }
		
		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		[MaxLength( 100 )]
		[DataMember]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		[DataMember]
		public string Description { get; set; }
		
		/// <summary>
		/// Gets or sets the Theme.
		/// </summary>
		/// <value>
		/// Theme.
		/// </value>
		[MaxLength( 100 )]
		[DataMember]
		public string Theme { get; set; }
		
		/// <summary>
		/// Gets or sets the Default Page Id.
		/// </summary>
		/// <value>
		/// Default Page Id.
		/// </value>
		[DataMember]
		public int? DefaultPageId { get; set; }
		
		/// <summary>
		/// Gets or sets the Favicon Url.
		/// </summary>
		/// <value>
		/// Favicon Url.
		/// </value>
		[MaxLength( 150 )]
		[DataMember]
		public string FaviconUrl { get; set; }
		
		/// <summary>
		/// Gets or sets the Apple Touch Icon Url.
		/// </summary>
		/// <value>
		/// Apple Touch Icon Url.
		/// </value>
		[MaxLength( 150 )]
		[DataMember]
		public string AppleTouchIconUrl { get; set; }
		
		/// <summary>
		/// Gets or sets the Facebook App Id.
		/// </summary>
		/// <value>
		/// Facebook App Id.
		/// </value>
		[MaxLength( 25 )]
		[DataMember]
		public string FacebookAppId { get; set; }
		
		/// <summary>
		/// Gets or sets the Facebook App Secret.
		/// </summary>
		/// <value>
		/// Facebook App Secret.
		/// </value>
		[MaxLength( 50 )]
		[DataMember]
		public string FacebookAppSecret { get; set; }
		
		/// <summary>
		/// Gets or sets the Login Page Reference.
		/// </summary>
		/// <value>
		/// Login Page Reference.
		/// </value>
		[MaxLength( 10 )]
		[DataMember]
		public string LoginPageReference { get; set; }
		
		/// <summary>
		/// Gets or sets the Registration Page Reference.
		/// </summary>
		/// <value>
		/// Registration Page Reference.
		/// </value>
		[MaxLength( 10 )]
		[DataMember]
		public string RegistrationPageReference { get; set; }
		
		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		[DataMember]
		public DateTime? CreatedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		[DataMember]
		public DateTime? ModifiedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Created By Person Id.
		/// </summary>
		/// <value>
		/// Created By Person Id.
		/// </value>
		[DataMember]
		public int? CreatedByPersonId { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		[DataMember]
		public int? ModifiedByPersonId { get; set; }
		
		/// <summary>
        /// Gets a Data Transfer Object (lightweight) version of this object.
        /// </summary>
        /// <value>
        /// A <see cref="SiteDTO"/> object.
        /// </value>
		public virtual SiteDTO DataTransferObject
		{
			get { return new SiteDTO( this ); }
		}

        /// <summary>
        /// Gets the auth entity.
        /// </summary>
		[NotMapped]
		public override string AuthEntity { get { return "Cms.Site"; } }
        
		/// <summary>
        /// Gets or sets the Pages.
        /// </summary>
        /// <value>
        /// Collection of Pages.
        /// </value>
		public virtual ICollection<Page> Pages { get; set; }
        
		/// <summary>
        /// Gets or sets the Site Domains.
        /// </summary>
        /// <value>
        /// Collection of Site Domains.
        /// </value>
		public virtual ICollection<SiteDomain> SiteDomains { get; set; }
        
		/// <summary>
        /// Gets or sets the Default Page.
        /// </summary>
        /// <value>
        /// A <see cref="Page"/> object.
        /// </value>
		public virtual Page DefaultPage { get; set; }
        
		/// <summary>
        /// Gets or sets the Created By Person.
        /// </summary>
        /// <value>
        /// A <see cref="Crm.Person"/> object.
        /// </value>
		public virtual Crm.Person CreatedByPerson { get; set; }
        
		/// <summary>
        /// Gets or sets the Modified By Person.
        /// </summary>
        /// <value>
        /// A <see cref="Crm.Person"/> object.
        /// </value>
		public virtual Crm.Person ModifiedByPerson { get; set; }

    }

    /// <summary>
    /// Site Data Transfer Object.
    /// </summary>
	/// <remarks>
	/// Data Transfer Objects are a lightweight version of the Entity object that are used
	/// in situations like serializing the object in the REST api
	/// </remarks>
    public partial class SiteDTO
    {
        /// <summary>
        /// The Id
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the GUID.
        /// </summary>
        /// <value>
        /// The GUID.
        /// </value>
        public Guid Guid { get; set; }

		/// <summary>
		/// Gets or sets the System.
		/// </summary>
		/// <value>
		/// System.
		/// </value>
		public bool System { get; set; }

		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		public string Name { get; set; }

		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		public string Description { get; set; }

		/// <summary>
		/// Gets or sets the Theme.
		/// </summary>
		/// <value>
		/// Theme.
		/// </value>
		public string Theme { get; set; }

		/// <summary>
		/// Gets or sets the Default Page Id.
		/// </summary>
		/// <value>
		/// Default Page Id.
		/// </value>
		public int? DefaultPageId { get; set; }

		/// <summary>
		/// Gets or sets the Favicon Url.
		/// </summary>
		/// <value>
		/// Favicon Url.
		/// </value>
		public string FaviconUrl { get; set; }

		/// <summary>
		/// Gets or sets the Apple Touch Icon Url.
		/// </summary>
		/// <value>
		/// Apple Touch Icon Url.
		/// </value>
		public string AppleTouchIconUrl { get; set; }

		/// <summary>
		/// Gets or sets the Facebook App Id.
		/// </summary>
		/// <value>
		/// Facebook App Id.
		/// </value>
		public string FacebookAppId { get; set; }

		/// <summary>
		/// Gets or sets the Facebook App Secret.
		/// </summary>
		/// <value>
		/// Facebook App Secret.
		/// </value>
		public string FacebookAppSecret { get; set; }

		/// <summary>
		/// Gets or sets the Login Page Reference.
		/// </summary>
		/// <value>
		/// Login Page Reference.
		/// </value>
		public string LoginPageReference { get; set; }

		/// <summary>
		/// Gets or sets the Registration Page Reference.
		/// </summary>
		/// <value>
		/// Registration Page Reference.
		/// </value>
		public string RegistrationPageReference { get; set; }

		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		public DateTime? CreatedDateTime { get; set; }

		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		public DateTime? ModifiedDateTime { get; set; }

		/// <summary>
		/// Gets or sets the Created By Person Id.
		/// </summary>
		/// <value>
		/// Created By Person Id.
		/// </value>
		public int? CreatedByPersonId { get; set; }

		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		public int? ModifiedByPersonId { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="SiteDTO"/> class.
        /// </summary>
		public SiteDTO()
		{
		}

        /// <summary>
        /// Initializes a new instance of the <see cref="SiteDTO"/> class.
        /// </summary>
        /// <param name="site">The Site.</param>
		public SiteDTO( Site site )
		{
			Id = site.Id;
			Guid = site.Guid;
			System = site.System;
			Name = site.Name;
			Description = site.Description;
			Theme = site.Theme;
			DefaultPageId = site.DefaultPageId;
			FaviconUrl = site.FaviconUrl;
			AppleTouchIconUrl = site.AppleTouchIconUrl;
			FacebookAppId = site.FacebookAppId;
			FacebookAppSecret = site.FacebookAppSecret;
			LoginPageReference = site.LoginPageReference;
			RegistrationPageReference = site.RegistrationPageReference;
			CreatedDateTime = site.CreatedDateTime;
			ModifiedDateTime = site.ModifiedDateTime;
			CreatedByPersonId = site.CreatedByPersonId;
			ModifiedByPersonId = site.ModifiedByPersonId;
		}
	}

    /// <summary>
    /// Site Configuration class.
    /// </summary>
    public partial class SiteConfiguration : EntityTypeConfiguration<Site>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SiteConfiguration"/> class.
        /// </summary>
        public SiteConfiguration()
        {
			this.HasOptional( p => p.DefaultPage ).WithMany( p => p.Sites ).HasForeignKey( p => p.DefaultPageId );
			this.HasOptional( p => p.CreatedByPerson ).WithMany().HasForeignKey( p => p.CreatedByPersonId );
			this.HasOptional( p => p.ModifiedByPerson ).WithMany().HasForeignKey( p => p.ModifiedByPersonId );
		}
    }
}
