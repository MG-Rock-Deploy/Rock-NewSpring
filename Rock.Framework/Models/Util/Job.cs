//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity.ModelConfiguration;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

using Rock.Models;

namespace Rock.Models.Util
{
    /// <summary>
    /// Job POCO Entity.
    /// </summary>
    [Table( "utilJob" )]
    public partial class Job : ModelWithAttributes<Job>
    {
		/// <summary>
		/// Gets or sets the System.
		/// </summary>
		/// <value>
		/// System.
		/// </value>
		[DataMember]
		public bool? System { get; set; }
		
		/// <summary>
		/// Gets or sets the Active.
		/// </summary>
		/// <value>
		/// Active.
		/// </value>
		[DataMember]
		public bool? Active { get; set; }
		
		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		[MaxLength( 100 )]
		[DataMember]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		[MaxLength( 500 )]
		[DataMember]
		public string Description { get; set; }
		
		/// <summary>
		/// Gets or sets the Assemby.
		/// </summary>
		/// <value>
		/// Assemby.
		/// </value>
		[MaxLength( 100 )]
		[DataMember]
		public string Assemby { get; set; }
		
		/// <summary>
		/// Gets or sets the Class.
		/// </summary>
		/// <value>
		/// Class.
		/// </value>
		[MaxLength( 100 )]
		[DataMember]
		public string Class { get; set; }
		
		/// <summary>
		/// Gets or sets the Cron Expression.
		/// </summary>
		/// <value>
		/// Cron Expression.
		/// </value>
		[MaxLength( 120 )]
		[DataMember]
		public string CronExpression { get; set; }
		
		/// <summary>
		/// Gets or sets the Last Successful Run.
		/// </summary>
		/// <value>
		/// Last Successful Run.
		/// </value>
		[DataMember]
		public DateTime? LastSuccessfulRun { get; set; }
		
		/// <summary>
		/// Gets or sets the Last Run Date.
		/// </summary>
		/// <value>
		/// Last Run Date.
		/// </value>
		[DataMember]
		public DateTime? LastRunDate { get; set; }
		
		/// <summary>
		/// Gets or sets the Last Run Duration.
		/// </summary>
		/// <value>
		/// Number of seconds that the last job took to finish..
		/// </value>
		[DataMember]
		public int? LastRunDuration { get; set; }
		
		/// <summary>
		/// Gets or sets the Last Status.
		/// </summary>
		/// <value>
		/// Last Status.
		/// </value>
		[MaxLength( 50 )]
		[DataMember]
		public string LastStatus { get; set; }
		
		/// <summary>
		/// Gets or sets the Last Status Message.
		/// </summary>
		/// <value>
		/// Last Status Message.
		/// </value>
		[DataMember]
		public string LastStatusMessage { get; set; }
		
		/// <summary>
		/// Gets or sets the Notification Emails.
		/// </summary>
		/// <value>
		/// Notification Emails.
		/// </value>
		[MaxLength( 1000 )]
		[DataMember]
		public string NotificationEmails { get; set; }
		
		/// <summary>
		/// Gets or sets the Notification Status.
		/// </summary>
		/// <value>
		/// Valid valids = All = 1, Success = 2, Error = 3, None = 4  Enum[JobNotificationStatus].
		/// </value>
		[DataMember]
		internal int NotificationStatusInternal { get; set; }

		/// <summary>
		/// Gets or sets the Notification Status.
		/// </summary>
		/// <value>
		/// Valid valids = All = 1, Success = 2, Error = 3, None = 4  Enum[JobNotificationStatus].
		/// </value>
		[NotMapped]
		public JobNotificationStatus NotificationStatus
		{
			get { return (JobNotificationStatus)this.NotificationStatusInternal; }
			set { this.NotificationStatusInternal = (int)value; }
		}
		
		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		[DataMember]
		public DateTime? CreatedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		[DataMember]
		public DateTime? ModifiedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Create By Person Id.
		/// </summary>
		/// <value>
		/// Create By Person Id.
		/// </value>
		[DataMember]
		public int? CreateByPersonId { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		[DataMember]
		public int? ModifiedByPersonId { get; set; }
		
		/// <summary>
        /// Gets a Data Transfer Object (lightweight) version of this object.
        /// </summary>
        /// <value>
        /// A <see cref="JobDTO"/> object.
        /// </value>
		public virtual JobDTO DataTransferObject
		{
			get { return new JobDTO( this ); }
		}

        /// <summary>
        /// Gets the auth entity.
        /// </summary>
		[NotMapped]
		public override string AuthEntity { get { return "Util.Job"; } }
        
		/// <summary>
        /// Gets or sets the Create By Person.
        /// </summary>
        /// <value>
        /// A <see cref="Crm.Person"/> object.
        /// </value>
		public virtual Crm.Person CreateByPerson { get; set; }
        
		/// <summary>
        /// Gets or sets the Modified By Person.
        /// </summary>
        /// <value>
        /// A <see cref="Crm.Person"/> object.
        /// </value>
		public virtual Crm.Person ModifiedByPerson { get; set; }

    }

    /// <summary>
    /// Job Data Transfer Object.
    /// </summary>
	/// <remarks>
	/// Data Transfer Objects are a lightweight version of the Entity object that are used
	/// in situations like serializing the object in the REST api
	/// </remarks>
    public partial class JobDTO
    {
        /// <summary>
        /// The Id
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the GUID.
        /// </summary>
        /// <value>
        /// The GUID.
        /// </value>
        public Guid Guid { get; set; }

		/// <summary>
		/// Gets or sets the System.
		/// </summary>
		/// <value>
		/// System.
		/// </value>
		public bool? System { get; set; }

		/// <summary>
		/// Gets or sets the Active.
		/// </summary>
		/// <value>
		/// Active.
		/// </value>
		public bool? Active { get; set; }

		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		public string Name { get; set; }

		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		public string Description { get; set; }

		/// <summary>
		/// Gets or sets the Assemby.
		/// </summary>
		/// <value>
		/// Assemby.
		/// </value>
		public string Assemby { get; set; }

		/// <summary>
		/// Gets or sets the Class.
		/// </summary>
		/// <value>
		/// Class.
		/// </value>
		public string Class { get; set; }

		/// <summary>
		/// Gets or sets the Cron Expression.
		/// </summary>
		/// <value>
		/// Cron Expression.
		/// </value>
		public string CronExpression { get; set; }

		/// <summary>
		/// Gets or sets the Last Successful Run.
		/// </summary>
		/// <value>
		/// Last Successful Run.
		/// </value>
		public DateTime? LastSuccessfulRun { get; set; }

		/// <summary>
		/// Gets or sets the Last Run Date.
		/// </summary>
		/// <value>
		/// Last Run Date.
		/// </value>
		public DateTime? LastRunDate { get; set; }

		/// <summary>
		/// Gets or sets the Last Run Duration.
		/// </summary>
		/// <value>
		/// Number of seconds that the last job took to finish..
		/// </value>
		public int? LastRunDuration { get; set; }

		/// <summary>
		/// Gets or sets the Last Status.
		/// </summary>
		/// <value>
		/// Last Status.
		/// </value>
		public string LastStatus { get; set; }

		/// <summary>
		/// Gets or sets the Last Status Message.
		/// </summary>
		/// <value>
		/// Last Status Message.
		/// </value>
		public string LastStatusMessage { get; set; }

		/// <summary>
		/// Gets or sets the Notification Emails.
		/// </summary>
		/// <value>
		/// Notification Emails.
		/// </value>
		public string NotificationEmails { get; set; }

		/// <summary>
		/// Gets or sets the Notification Status.
		/// </summary>
		/// <value>
		/// Valid valids = All = 1, Success = 2, Error = 3, None = 4  Enum[JobNotificationStatus].
		/// </value>
		public JobNotificationStatus NotificationStatus { get; set; }

		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		public DateTime? CreatedDateTime { get; set; }

		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		public DateTime? ModifiedDateTime { get; set; }

		/// <summary>
		/// Gets or sets the Create By Person Id.
		/// </summary>
		/// <value>
		/// Create By Person Id.
		/// </value>
		public int? CreateByPersonId { get; set; }

		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		public int? ModifiedByPersonId { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="JobDTO"/> class.
        /// </summary>
		public JobDTO()
		{
		}

        /// <summary>
        /// Initializes a new instance of the <see cref="JobDTO"/> class.
        /// </summary>
        /// <param name="job">The Job.</param>
		public JobDTO( Job job )
		{
			Id = job.Id;
			Guid = job.Guid;
			System = job.System;
			Active = job.Active;
			Name = job.Name;
			Description = job.Description;
			Assemby = job.Assemby;
			Class = job.Class;
			CronExpression = job.CronExpression;
			LastSuccessfulRun = job.LastSuccessfulRun;
			LastRunDate = job.LastRunDate;
			LastRunDuration = job.LastRunDuration;
			LastStatus = job.LastStatus;
			LastStatusMessage = job.LastStatusMessage;
			NotificationEmails = job.NotificationEmails;
			NotificationStatus = job.NotificationStatus;
			CreatedDateTime = job.CreatedDateTime;
			ModifiedDateTime = job.ModifiedDateTime;
			CreateByPersonId = job.CreateByPersonId;
			ModifiedByPersonId = job.ModifiedByPersonId;
		}
	}

    /// <summary>
    /// Job Configuration class.
    /// </summary>
    public partial class JobConfiguration : EntityTypeConfiguration<Job>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobConfiguration"/> class.
        /// </summary>
        public JobConfiguration()
        {
			this.Property( p => p.NotificationStatusInternal ).HasColumnName( "NotificationStatus" );
			this.HasOptional( p => p.CreateByPerson ).WithMany().HasForeignKey( p => p.CreateByPersonId );
			this.HasOptional( p => p.ModifiedByPerson ).WithMany().HasForeignKey( p => p.ModifiedByPersonId );
		}
    }
}
