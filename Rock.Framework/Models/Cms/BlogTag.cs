//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity.ModelConfiguration;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;

using Rock.Models;

namespace Rock.Models.Cms
{
    /// <summary>
    /// Blog Tag POCO Entity.
    /// </summary>
    [Table( "cmsBlogTag" )]
    public partial class BlogTag : ModelWithAttributes<BlogTag>
    {
		/// <summary>
		/// Gets or sets the Blog Id.
		/// </summary>
		/// <value>
		/// Blog Id.
		/// </value>
		[DataMember]
		public int BlogId { get; set; }
		
		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		[MaxLength( 50 )]
		[DataMember]
		public string Name { get; set; }
		
		/// <summary>
        /// Gets a Data Transfer Object (lightweight) version of this object.
        /// </summary>
        /// <value>
        /// A <see cref="BlogTagDTO"/> object.
        /// </value>
		public virtual BlogTagDTO DataTransferObject
		{
			get { return new BlogTagDTO( this ); }
		}

        /// <summary>
        /// Gets the auth entity.
        /// </summary>
		[NotMapped]
		public override string AuthEntity { get { return "Cms.BlogTag"; } }
        
		/// <summary>
        /// Gets or sets the Blog Posts.
        /// </summary>
        /// <value>
        /// Collection of Blog Posts.
        /// </value>
		public virtual ICollection<BlogPost> BlogPosts { get; set; }
        
		/// <summary>
        /// Gets or sets the Blog.
        /// </summary>
        /// <value>
        /// A <see cref="Blog"/> object.
        /// </value>
		public virtual Blog Blog { get; set; }

    }

    /// <summary>
    /// Blog Tag Data Transfer Object.
    /// </summary>
	/// <remarks>
	/// Data Transfer Objects are a lightweight version of the Entity object that are used
	/// in situations like serializing the object in the REST api
	/// </remarks>
    public partial class BlogTagDTO
    {
        /// <summary>
        /// The Id
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the GUID.
        /// </summary>
        /// <value>
        /// The GUID.
        /// </value>
        public Guid Guid { get; set; }

		/// <summary>
		/// Gets or sets the Blog Id.
		/// </summary>
		/// <value>
		/// Blog Id.
		/// </value>
		public int BlogId { get; set; }

		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		public string Name { get; set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="BlogTagDTO"/> class.
        /// </summary>
		public BlogTagDTO()
		{
		}

        /// <summary>
        /// Initializes a new instance of the <see cref="BlogTagDTO"/> class.
        /// </summary>
        /// <param name="blogTag">The Blog Tag.</param>
		public BlogTagDTO( BlogTag blogTag )
		{
			Id = blogTag.Id;
			Guid = blogTag.Guid;
			BlogId = blogTag.BlogId;
			Name = blogTag.Name;
		}
	}

    /// <summary>
    /// Blog Tag Configuration class.
    /// </summary>
    public partial class BlogTagConfiguration : EntityTypeConfiguration<BlogTag>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlogTagConfiguration"/> class.
        /// </summary>
        public BlogTagConfiguration()
        {
			this.HasRequired( p => p.Blog ).WithMany( p => p.BlogTags ).HasForeignKey( p => p.BlogId );
		}
    }
}
