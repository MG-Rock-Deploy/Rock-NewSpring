<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rock.Framework</name>
    </assembly>
    <members>
        <member name="T:Rock.Services.Core.FieldTypeService">
            <summary>
            Field Type POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Services.Service`1">
            <summary>
            Generic POCO service class
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Services.Service`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Services.Service`1"/> class.
            </summary>
        </member>
        <member name="M:Rock.Services.Service`1.#ctor(Rock.Repository.IRepository{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Services.Service`1"/> class.
            </summary>
            <param name="Repository">The repository.</param>
        </member>
        <member name="M:Rock.Services.Service`1.Queryable">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> list of all models
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Service`1.Get(System.Int32)">
            <summary>
            Gets the model with the id value
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Service`1.Add(`0,System.Nullable{System.Int32})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Service`1.Attach(`0)">
            <summary>
            Attaches the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rock.Services.Service`1.Delete(`0,System.Nullable{System.Int32})">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Service`1.Save(`0,System.Nullable{System.Int32})">
            <summary>
            Saves the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Services.Service`1.Reorder(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Reorders the specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Services.Service`1.Repository">
            <summary>
            Gets the repository.
            </summary>
        </member>
        <member name="M:Rock.Services.Core.FieldTypeService.GetByGuid(System.Guid)">
            <summary>
            Gets Field Types by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of FieldType objects.</returns>
        </member>
        <member name="M:Rock.Services.Core.FieldTypeService.GetByName(System.String)">
            <summary>
            Gets Field Types by Name
            </summary>
            <param name="name">Name.</param>
            <returns>An enumerable list of FieldType objects.</returns>
        </member>
        <member name="T:Rock.Repository.Util.IJobRepository">
            <summary>
            Represents a Job POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.IRepository`1">
            <summary>
            Repository interface for POCO models
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Repository.IRepository`1.AsQueryable">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> list of all models
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.GetAll">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all models.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of models matching the where expression
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the only model matching the where expression.  Throws an exception if more than one
            model match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the first model matching the where expression.  Throws an exception if no models 
            match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the first model matching the where expression.  Returns null if no models 
            match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Attach(`0)">
            <summary>
            Attaches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.IRepository`1.Save(System.Nullable{System.Int32})">
            <summary>
            Saves any changes made in the current context
            </summary>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Repository.Groups.IMemberRepository">
            <summary>
            Represents a Member POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityDefinedValueRepository">
            <summary>
            Defined Value POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.EntityRepository`1">
            <summary>
            Repository for working with the Entity Framework
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Repository.EntityRepository`1"/> class.
            </summary>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Repository.EntityRepository`1"/> class.
            </summary>
            <param name="objectContext">The object context.</param>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.AsQueryable">
            <summary>
            An <see cref="T:System.Linq.IQueryable`1"/> list of entitities
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.GetAll">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all entities that match the where clause
            </summary>
            <param name="where">
            <example>An example where clause: <c>t =&gt; t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the only entity that matches the where clause
            </summary>
            <remarks>If more than one entity matches the where clause, and exception occurs</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get's the first entity that matches the where clause
            </summary>
            <remarks>If an entity that matches the where clause does not exist, an exception occurs</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get's the first entity that matches the where clause
            </summary>
            <remarks>If an entity that matches the where clause does not exist, a null value is returned</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Attach(`0)">
            <summary>
            Attaches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Repository.EntityRepository`1.Save(System.Nullable{System.Int32})">
            <summary>
            Saves the entity and returns a list of any entity changes that 
            need to be logged
            </summary>
            <param name="PersonId">The id of the person making the change</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Repository.EntityRepository`1.Context">
            <summary>
            Gets the context.
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IDefinedValueRepository">
            <summary>
            Represents a Defined Value POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IPageRepository">
            <summary>
            Represents a Page POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Groups.Member">
            <summary>
            Member POCO Entity.
            </summary>
        </member>
        <member name="T:Rock.Models.ModelWithAttributes`1">
            <summary>
            Represents a model with attributes. 
            </summary>
        </member>
        <member name="T:Rock.Models.Model`1">
            <summary>
            Base class that all models need to inherit from
            </summary>
        </member>
        <member name="T:Rock.Models.IModel">
            <summary>
            Represents a POCO class model
            </summary>
        </member>
        <member name="T:Rock.Cms.Security.ISecured">
            <summary>
            Represents a securable object 
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.ISecured.Authorized(System.String,System.Web.Security.MembershipUser)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.ISecured.DefaultAuthorization(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Cms.Security.ISecured.AuthEntity">
            <summary>
            The auth entity. Classes that implement the <see cref="T:Rock.Cms.Security.ISecured"/> interface should return
            a value that is unique across all <see cref="T:Rock.Cms.Security.ISecured"/> classes.  Typically this is the 
            qualified name of the class. 
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.ISecured.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.ISecured.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to 
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.ISecured.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="P:Rock.Models.IModel.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="M:Rock.Models.Model`1.Authorized(System.String,System.Web.Security.MembershipUser)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Models.Model`1.DefaultAuthorization(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Models.Model`1.OnAdding(Rock.Models.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Adding"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseAddingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the adding event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Models.Model`1.OnAdded(Rock.Models.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Added"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseAddedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the added event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Models.Model`1.OnDeleting(Rock.Models.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Deleting"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseDeletingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the deleting event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Models.Model`1.OnDeleted(Rock.Models.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Deleted"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseDeletedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the deleted event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Models.Model`1.OnUpdating(Rock.Models.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Updating"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseUpdatingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the updating event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Models.Model`1.OnUpdated(Rock.Models.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Updated"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Models.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Models.Model`1.RaiseUpdatedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the updated event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Models.Model`1.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Models.Model`1.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="P:Rock.Models.Model`1.AuthEntity">
            <summary>
            The auth entity. Classes that implement the <see cref="T:Rock.Cms.Security.ISecured"/> interface should return
            a value that is unique across all <see cref="T:Rock.Cms.Security.ISecured"/> classes.  Typically this is the
            qualified name of the class.
            </summary>
        </member>
        <member name="P:Rock.Models.Model`1.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Models.Model`1.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Adding">
            <summary>
            Occurs when model is being added.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Added">
            <summary>
            Occurs when model was added.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Deleting">
            <summary>
            Occurs when model is being deleted.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Deleted">
            <summary>
            Occurs when model was deleted.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Updating">
            <summary>
            Occurs when model is being updated.
            </summary>
        </member>
        <member name="E:Rock.Models.Model`1.Updated">
            <summary>
            Occurs when model was updated
            </summary>
        </member>
        <member name="T:Rock.Attribute.IHasAttributes">
            <summary>
            Represents any class that supports having attributes
            </summary>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.Attributes">
            <summary>
            List of attributes associated with the object.  This property will not include the attribute values.
            The <see cref="P:Rock.Attribute.IHasAttributes.AttributeValues"/> property should be used to get attribute values
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
            <remarks>
            The dictionary key stores tha attribute's key, and the dictionary value is a KeyValuePair object that
            stores the attribute name as the key and the attribute's value as it's value. 
            <example>
            Example
            </example>
            <code>
            <![CDATA[Dictionary<"AttributeKey", KeyValuePair<"Attribute Name", "Attribute Value">>]]>
            </code>
            </remarks>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="P:Rock.Models.ModelWithAttributes`1.Attributes">
            <summary>
            List of attributes associated with the object.  This property will not include the attribute values.
            The <see cref="P:Rock.Models.ModelWithAttributes`1.AttributeValues"/> property should be used to get attribute values
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Models.ModelWithAttributes`1.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="T:Rock.Models.IAuditable">
            <summary>
            Represents a model that tracks when the model was created and last updated and by who
            </summary>
        </member>
        <member name="P:Rock.Models.IAuditable.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Models.IAuditable.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Models.IAuditable.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Models.IAuditable.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Models.IAuditable.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.GroupId">
            <summary>
            Gets or sets the Group Id.
            </summary>
            <value>
            Group Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.GroupRoleId">
            <summary>
            Gets or sets the Group Role Id.
            </summary>
            <value>
            Group Role Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.Member.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.Group">
            <summary>
            Gets or sets the Group.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Groups.Member.Group"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Member.GroupRole">
            <summary>
            Gets or sets the Group Role.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Groups.Member.GroupRole"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Groups.MemberConfiguration">
            <summary>
            Member Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Groups.MemberConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Groups.MemberConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.User">
            <summary>
            User POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.User.DefaultAuthorization(System.String)">
            <summary>
            The default authorization for the selected action.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Models.Cms.User.Username">
            <summary>
            Gets or sets the Username.
            </summary>
            <value>
            Username.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.ApplicationName">
            <summary>
            Gets or sets the Application Name.
            </summary>
            <value>
            Application Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.Email">
            <summary>
            Gets or sets the Email.
            </summary>
            <value>
            Email.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.Comment">
            <summary>
            Gets or sets the Comment.
            </summary>
            <value>
            Comment.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.AuthenticationType">
            <summary>
            Gets or sets the Authentication Type.
            </summary>
            <value>
            Authentication Type.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.Password">
            <summary>
            Gets or sets the Password.
            </summary>
            <value>
            Password.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.PasswordQuestion">
            <summary>
            Gets or sets the Password Question.
            </summary>
            <value>
            Password Question.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.PasswordAnswer">
            <summary>
            Gets or sets the Password Answer.
            </summary>
            <value>
            Password Answer.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.IsApproved">
            <summary>
            Gets or sets the Is Approved.
            </summary>
            <value>
            Is Approved.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.LastActivityDate">
            <summary>
            Gets or sets the Last Activity Date.
            </summary>
            <value>
            Last Activity Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.LastLoginDate">
            <summary>
            Gets or sets the Last Login Date.
            </summary>
            <value>
            Last Login Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.LastPasswordChangedDate">
            <summary>
            Gets or sets the Last Password Changed Date.
            </summary>
            <value>
            Last Password Changed Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.CreationDate">
            <summary>
            Gets or sets the Creation Date.
            </summary>
            <value>
            Creation Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.IsOnLine">
            <summary>
            Gets or sets the Is On Line.
            </summary>
            <value>
            Is On Line.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.IsLockedOut">
            <summary>
            Gets or sets the Is Locked Out.
            </summary>
            <value>
            Is Locked Out.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.LastLockedOutDate">
            <summary>
            Gets or sets the Last Locked Out Date.
            </summary>
            <value>
            Last Locked Out Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.FailedPasswordAttemptCount">
            <summary>
            Gets or sets the Failed Password Attempt Count.
            </summary>
            <value>
            Failed Password Attempt Count.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.FailedPasswordAttemptWindowStart">
            <summary>
            Gets or sets the Failed Password Attempt Window Start.
            </summary>
            <value>
            Failed Password Attempt Window Start.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.FailedPasswordAnswerAttemptCount">
            <summary>
            Gets or sets the Failed Password Answer Attempt Count.
            </summary>
            <value>
            Failed Password Answer Attempt Count.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.FailedPasswordAnswerAttemptWindowStart">
            <summary>
            Gets or sets the Failed Password Answer Attempt Window Start.
            </summary>
            <value>
            Failed Password Answer Attempt Window Start.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.IsSubscriber">
            <summary>
            Gets or sets the Is Subscriber.
            </summary>
            <value>
            Is Subscriber.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.User.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.User.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogTag">
            <summary>
            Blog Tag POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogTag.BlogId">
            <summary>
            Gets or sets the Blog Id.
            </summary>
            <value>
            Blog Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogTag.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogTag.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogTag.BlogPosts">
            <summary>
            Gets or sets the Blog Posts.
            </summary>
            <value>
            Collection of Blog Posts.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogTag.Blog">
            <summary>
            Gets or sets the Blog.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.BlogTag.Blog"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogTagConfiguration">
            <summary>
            Blog Tag Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlogTagConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlogTagConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.BlogPost">
            <summary>
            Blog Post POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.BlogId">
            <summary>
            Gets or sets the Blog Id.
            </summary>
            <value>
            Blog Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            Title.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.Content">
            <summary>
            Gets or sets the Content.
            </summary>
            <value>
            Content.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.AuthorId">
            <summary>
            Gets or sets the Author Id.
            </summary>
            <value>
            Author Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.State">
            <summary>
            Gets or sets the State.
            </summary>
            <value>
            State.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.PublishDate">
            <summary>
            Gets or sets the Publish Date.
            </summary>
            <value>
            Publish Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.BlogCategories">
            <summary>
            Gets or sets the Blog Categories.
            </summary>
            <value>
            Collection of Blog Categories.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.BlogPostComments">
            <summary>
            Gets or sets the Blog Post Comments.
            </summary>
            <value>
            Collection of Blog Post Comments.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.BlogTags">
            <summary>
            Gets or sets the Blog Tags.
            </summary>
            <value>
            Collection of Blog Tags.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.Blog">
            <summary>
            Gets or sets the Blog.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.BlogPost.Blog"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.Author">
            <summary>
            Gets or sets the Author.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPost.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogPost.PostStatus">
            <summary>
            Blog post status
            </summary>
        </member>
        <member name="F:Rock.Models.Cms.BlogPost.PostStatus.Published">
            <summary>
            A published blog post 
            </summary>
        </member>
        <member name="F:Rock.Models.Cms.BlogPost.PostStatus.Draft">
            <summary>
            A blog post that has not yet been published
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.BlogPostConfiguration">
            <summary>
            Blog Post Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlogPostConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlogPostConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.PageService">
            <summary>
            REST WCF service for Pages
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IPageService">
            <summary>
            Represents a REST WCF service for Pages
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageService.Get(System.String)">
            <summary>
            Gets a Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageService.UpdatePage(System.String,Rock.Models.Cms.Page)">
            <summary>
            Updates a Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageService.CreatePage(Rock.Models.Cms.Page)">
            <summary>
            Creates a new Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageService.DeletePage(System.String)">
            <summary>
            Deletes a Page object
            </summary>
        </member>
        <member name="T:Rock.Api.IService">
            <summary>
            Interface used for the MEF import/export signature of all WCF REST Api services
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageService.Get(System.String)">
            <summary>
            Gets a Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageService.UpdatePage(System.String,Rock.Models.Cms.Page)">
            <summary>
            Updates a Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageService.CreatePage(Rock.Models.Cms.Page)">
            <summary>
            Creates a new Page object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageService.DeletePage(System.String)">
            <summary>
            Deletes a Page object
            </summary>
        </member>
        <member name="T:Rock.Api.Crm.PersonService">
            <summary>
            REST WCF service for People
            </summary>
        </member>
        <member name="T:Rock.Api.Crm.IPersonService">
            <summary>
            Represents a REST WCF service for People
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPersonService.Get(System.String)">
            <summary>
            Gets a Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPersonService.UpdatePerson(System.String,Rock.Models.Crm.Person)">
            <summary>
            Updates a Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPersonService.CreatePerson(Rock.Models.Crm.Person)">
            <summary>
            Creates a new Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPersonService.DeletePerson(System.String)">
            <summary>
            Deletes a Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PersonService.Get(System.String)">
            <summary>
            Gets a Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PersonService.UpdatePerson(System.String,Rock.Models.Crm.Person)">
            <summary>
            Updates a Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PersonService.CreatePerson(Rock.Models.Crm.Person)">
            <summary>
            Creates a new Person object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PersonService.DeletePerson(System.String)">
            <summary>
            Deletes a Person object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IAttributeQualifierService">
            <summary>
            Represents a REST WCF service for AttributeQualifiers
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeQualifierService.Get(System.String)">
            <summary>
            Gets a AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeQualifierService.UpdateAttributeQualifier(System.String,Rock.Models.Core.AttributeQualifier)">
            <summary>
            Updates a AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeQualifierService.CreateAttributeQualifier(Rock.Models.Core.AttributeQualifier)">
            <summary>
            Creates a new AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeQualifierService.DeleteAttributeQualifier(System.String)">
            <summary>
            Deletes a AttributeQualifier object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IFileService">
            <summary>
            Represents a REST WCF service for Files
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IFileService.Get(System.String)">
            <summary>
            Gets a File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IFileService.UpdateFile(System.String,Rock.Models.Cms.File)">
            <summary>
            Updates a File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IFileService.CreateFile(Rock.Models.Cms.File)">
            <summary>
            Creates a new File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IFileService.DeleteFile(System.String)">
            <summary>
            Deletes a File object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlogService">
            <summary>
            Represents a REST WCF service for Blogs
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogService.Get(System.String)">
            <summary>
            Gets a Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogService.UpdateBlog(System.String,Rock.Models.Cms.Blog)">
            <summary>
            Updates a Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogService.CreateBlog(Rock.Models.Cms.Blog)">
            <summary>
            Creates a new Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogService.DeleteBlog(System.String)">
            <summary>
            Deletes a Blog object
            </summary>
        </member>
        <member name="T:Rock.Services.Crm.AddressService">
            <summary>
            Address POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.Standardize(Rock.Address.AddressStub,System.Nullable{System.Int32})">
            <summary>
            Standardizes the specified <see cref="T:Rock.Address.AddressStub"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.Standardize(Rock.Models.Crm.Address,System.Nullable{System.Int32})">
            <summary>
            Standardizes the specified <see cref="T:Rock.Models.Crm.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.Geocode(Rock.Address.AddressStub,System.Nullable{System.Int32})">
            <summary>
            Geocodes the specified <see cref="T:Rock.Address.AddressStub"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.Geocode(Rock.Models.Crm.Address,System.Nullable{System.Int32})">
            <summary>
            Geocodes the specified <see cref="T:Rock.Models.Crm.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.GetByAddressStub(Rock.Address.AddressStub,System.Nullable{System.Int32})">
            <summary>
            Looks for an existing address model first by searching for a raw value, and then by the street, 
            city, state, and zip of the specified address stub.  If a match is not found, then a new address
            block is returned.
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.GetByStreet1AndStreet2AndCityAndStateAndZip(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets Address by Street 1 And Street 2 And City And State And Zip
            </summary>
            <param name="street1">Street 1.</param>
            <param name="street2">Street 2.</param>
            <param name="city">City.</param>
            <param name="state">State.</param>
            <param name="zip">Zip.</param>
            <returns>Address object.</returns>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.GetByGuid(System.Guid)">
            <summary>
            Gets Address by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Address object.</returns>
        </member>
        <member name="M:Rock.Services.Crm.AddressService.GetByRaw(System.String)">
            <summary>
            Gets Address by Raw
            </summary>
            <param name="raw">Raw.</param>
            <returns>Address object.</returns>
        </member>
        <member name="T:Rock.Services.Core.AttributeService">
            <summary>
            Attribute POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Core.AttributeService.GetByEntity(System.String)">
            <summary>
            Gets Attributes by Entity
            </summary>
            <param name="entity">Entity.</param>
            <returns>An enumerable list of Attribute objects.</returns>
        </member>
        <member name="M:Rock.Services.Core.AttributeService.GetByGuid(System.Guid)">
            <summary>
            Gets Attribute by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Attribute object.</returns>
        </member>
        <member name="M:Rock.Services.Core.AttributeService.GetAttributesByEntityQualifierAndKey(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the attributes by entity qualifier and key.
            </summary>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Services.Cms.BlogTagService">
            <summary>
            Blog Tag POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.RequestArray">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArray.TransmissionReference">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArray.CustomerID">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArray.OptAddressParsed">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArray.Record">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.RequestArrayRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.RecordID">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Company">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.LastName">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.State">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Plus4">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.RequestArrayRecord.Country">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArray">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArray.Version">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArray.TransmissionReference">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArray.Results">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArray.TotalRecords">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArray.Record">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecord.RecordID">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecord.Results">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecord.Address">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Company">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Address1">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Address2">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.PrivateMailBox">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Plus4">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.CarrierRoute">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.DeliveryPointCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.DeliveryPointCheckDigit">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.CongressionalDistrict">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Type">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Country">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.AddressKey">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddress.Parsed">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressUrbanization">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressUrbanization.Name">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCity">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCity.Name">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCity.Abbreviation">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressState">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressState.Name">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressState.Abbreviation">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressType">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressType.Address">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressType.Zip">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeAddress">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeAddress.Code">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeAddress.Description">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeZip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeZip.Code">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressTypeZip.Description">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCountry">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCountry.Abbreviation">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressCountry.Name">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.StreetName">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.AddressRange">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.Suffix">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.Direction">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.PrivateMailbox">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.Garbage">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.RouteService">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.LockBox">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsed.DeliveryInstallation">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedDirection">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedDirection.Post">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedDirection.Pre">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedSuite">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedSuite.Range">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedSuite.Name">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedPrivateMailbox">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedPrivateMailbox.Name">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.MelissaData.Service.ResponseArrayRecordAddressParsedPrivateMailbox.Range">
            <remarks/>
        </member>
        <member name="T:Rock.Repository.Cms.IAuthRepository">
            <summary>
            Represents a Auth POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.Site">
            <summary>
            Site POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Site.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.Theme">
            <summary>
            Gets or sets the Theme.
            </summary>
            <value>
            Theme.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.DefaultPageId">
            <summary>
            Gets or sets the Default Page Id.
            </summary>
            <value>
            Default Page Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.FaviconUrl">
            <summary>
            Gets or sets the Favicon Url.
            </summary>
            <value>
            Favicon Url.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.AppleTouchIconUrl">
            <summary>
            Gets or sets the Apple Touch Icon Url.
            </summary>
            <value>
            Apple Touch Icon Url.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.FacebookAppId">
            <summary>
            Gets or sets the Facebook App Id.
            </summary>
            <value>
            Facebook App Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.FacebookAppSecret">
            <summary>
            Gets or sets the Facebook App Secret.
            </summary>
            <value>
            Facebook App Secret.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.LoginPageReference">
            <summary>
            Gets or sets the Login Page Reference.
            </summary>
            <value>
            Login Page Reference.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.RegistrationPageReference">
            <summary>
            Gets or sets the Registration Page Reference.
            </summary>
            <value>
            Registration Page Reference.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Site.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            Collection of Pages.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.SiteDomains">
            <summary>
            Gets or sets the Site Domains.
            </summary>
            <value>
            Collection of Site Domains.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.DefaultPage">
            <summary>
            Gets or sets the Default Page.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Cms.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Site.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.SiteConfiguration">
            <summary>
            Site Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.SiteConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.SiteConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Helpers.UnitOfWorkScope">
            <summary>
            Class used when services need to share the same DbContext
            </summary>
        </member>
        <member name="F:Rock.Helpers.UnitOfWorkScope.objectContext">
            <summary>
            The object context
            </summary>
        </member>
        <member name="M:Rock.Helpers.UnitOfWorkScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Helpers.UnitOfWorkScope"/> class.
            </summary>
        </member>
        <member name="M:Rock.Helpers.UnitOfWorkScope.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Helpers.UnitOfWorkScope"/> class.
            </summary>
            <param name="saveAllChangesAtScopeEnd">if set to <c>true</c> changes should be saved at scope end.</param>
        </member>
        <member name="M:Rock.Helpers.UnitOfWorkScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Rock.Helpers.UnitOfWorkScope.SaveAllChangesAtScopeEnd">
            <summary>
            Gets or sets a value indicating whether all changes should be saved when scope ends.
            </summary>
            <value>
            	<c>true</c> if changes should be saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Helpers.UnitOfWorkScope.CurrentObjectContext">
            <summary>
            Gets the current object context.
            </summary>
        </member>
        <member name="T:Rock.EntityFramework.RockContext">
            <summary>
            Entity Framework Context
            </summary>
        </member>
        <member name="M:Rock.EntityFramework.RockContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
            This method is called when the context has been initialized, but
            before the model has been locked down and used to initialize the context. 
            </summary>
            <param name="modelBuilder">The builder that defines the model for the context being created.</param>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Auths">
            <summary>
            Gets or sets the Auths.
            </summary>
            <value>
            the Auths.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Blocks">
            <summary>
            Gets or sets the Blocks.
            </summary>
            <value>
            the Blocks.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            the Block Instances.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Blogs">
            <summary>
            Gets or sets the Blogs.
            </summary>
            <value>
            the Blogs.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.BlogCategories">
            <summary>
            Gets or sets the Blog Categories.
            </summary>
            <value>
            the Blog Categories.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.BlogPosts">
            <summary>
            Gets or sets the Blog Posts.
            </summary>
            <value>
            the Blog Posts.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.BlogPostComments">
            <summary>
            Gets or sets the Blog Post Comments.
            </summary>
            <value>
            the Blog Post Comments.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.BlogTags">
            <summary>
            Gets or sets the Blog Tags.
            </summary>
            <value>
            the Blog Tags.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Files">
            <summary>
            Gets or sets the Files.
            </summary>
            <value>
            the Files.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.HtmlContents">
            <summary>
            Gets or sets the Html Contents.
            </summary>
            <value>
            the Html Contents.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            the Pages.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.PageRoutes">
            <summary>
            Gets or sets the Page Routes.
            </summary>
            <value>
            the Page Routes.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Sites">
            <summary>
            Gets or sets the Sites.
            </summary>
            <value>
            the Sites.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.SiteDomains">
            <summary>
            Gets or sets the Site Domains.
            </summary>
            <value>
            the Site Domains.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Users">
            <summary>
            Gets or sets the Users.
            </summary>
            <value>
            the Users.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Attributes">
            <summary>
            Gets or sets the Attributes.
            </summary>
            <value>
            the Attributes.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.AttributeQualifiers">
            <summary>
            Gets or sets the Attribute Qualifiers.
            </summary>
            <value>
            the Attribute Qualifiers.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.AttributeValues">
            <summary>
            Gets or sets the Attribute Values.
            </summary>
            <value>
            the Attribute Values.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.DefinedTypes">
            <summary>
            Gets or sets the Defined Types.
            </summary>
            <value>
            the Defined Types.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.DefinedValues">
            <summary>
            Gets or sets the Defined Values.
            </summary>
            <value>
            the Defined Values.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.EntityChanges">
            <summary>
            Gets or sets the Entity Changes.
            </summary>
            <value>
            the Entity Changes.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.FieldTypes">
            <summary>
            Gets or sets the Field Types.
            </summary>
            <value>
            the Field Types.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.ServiceLogs">
            <summary>
            Gets or sets the Service Logs.
            </summary>
            <value>
            the Service Logs.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Addresses">
            <summary>
            Gets or sets the Addresses.
            </summary>
            <value>
            the Addresses.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.People">
            <summary>
            Gets or sets the People.
            </summary>
            <value>
            the People.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.PhoneNumbers">
            <summary>
            Gets or sets the Phone Numbers.
            </summary>
            <value>
            the Phone Numbers.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            the Groups.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.GroupRoles">
            <summary>
            Gets or sets the Group Roles.
            </summary>
            <value>
            the Group Roles.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.GroupTypes">
            <summary>
            Gets or sets the Group Types.
            </summary>
            <value>
            the Group Types.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            the Members.
            </value>
        </member>
        <member name="P:Rock.EntityFramework.RockContext.Jobs">
            <summary>
            Gets or sets the Jobs.
            </summary>
            <value>
            the Jobs.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.HtmlContent">
            <summary>
            Html Content POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.HtmlContent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.BlockId">
            <summary>
            Gets or sets the Block Id.
            </summary>
            <value>
            Block Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.Content">
            <summary>
            Gets or sets the Content.
            </summary>
            <value>
            Content.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.EntityValue">
            <summary>
            Gets or sets the Entity Value.
            </summary>
            <value>
            Entity Value.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.VersionLabel">
            <summary>
            Gets or sets the Version Label.
            </summary>
            <value>
            Version Label.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.Approved">
            <summary>
            Gets or sets the Approved.
            </summary>
            <value>
            Approved.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ApprovedByPersonId">
            <summary>
            Gets or sets the Approved By Person Id.
            </summary>
            <value>
            Approved By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ApprovedDateTime">
            <summary>
            Gets or sets the Approved Date Time.
            </summary>
            <value>
            Approved Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.StartDateTime">
            <summary>
            Gets or sets the Start Date Time.
            </summary>
            <value>
            Start Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ExpireDateTime">
            <summary>
            Gets or sets the Expire Date Time.
            </summary>
            <value>
            Expire Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.Block">
            <summary>
            Gets or sets the Block.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Cms.BlockInstance"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ApprovedByPerson">
            <summary>
            Gets or sets the Approved By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.HtmlContent.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.File">
            <summary>
            File POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.File.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.Data">
            <summary>
            Gets or sets the Data.
            </summary>
            <value>
            Data.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.Url">
            <summary>
            Gets or sets the Url.
            </summary>
            <value>
            Url.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.FileName">
            <summary>
            Gets or sets the File Name.
            </summary>
            <value>
            File Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
            <value>
            Mime Type.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.File.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.File.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.FileConfiguration">
            <summary>
            File Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.FileConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.FileConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Controls.RowEventArgs">
            <summary>
            Event argument used by the <see cref="T:Rock.Controls.Grid"/> events
            </summary>
        </member>
        <member name="M:Rock.Controls.RowEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Controls.RowEventArgs"/> class.
            </summary>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="P:Rock.Controls.RowEventArgs.RowIndex">
            <summary>
            Gets the index of the row that fired the event
            </summary>
            <value>
            The index of the row.
            </value>
        </member>
        <member name="T:Rock.Api.Crm.AddressService">
            <summary>
            REST WCF service for Addresses
            </summary>
        </member>
        <member name="T:Rock.Api.Crm.IAddressService">
            <summary>
            Represents a REST WCF service for Addresses
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.Get(System.String)">
            <summary>
            Gets a Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.UpdateAddress(System.String,Rock.Models.Crm.Address)">
            <summary>
            Updates a Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.CreateAddress(Rock.Models.Crm.Address)">
            <summary>
            Creates a new Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.DeleteAddress(System.String)">
            <summary>
            Deletes a Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.Geocode(Rock.Address.AddressStub)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Api.Crm.IAddressService.Standardize(Rock.Address.AddressStub)">
            <summary>
            Standardizes the specified address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.Geocode(Rock.Address.AddressStub)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.Standardize(Rock.Address.AddressStub)">
            <summary>
            Standardizes the specified address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.Get(System.String)">
            <summary>
            Gets a Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.UpdateAddress(System.String,Rock.Models.Crm.Address)">
            <summary>
            Updates a Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.CreateAddress(Rock.Models.Crm.Address)">
            <summary>
            Creates a new Address object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.AddressService.DeleteAddress(System.String)">
            <summary>
            Deletes a Address object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.ISiteDomainService">
            <summary>
            Represents a REST WCF service for SiteDomains
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteDomainService.Get(System.String)">
            <summary>
            Gets a SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteDomainService.UpdateSiteDomain(System.String,Rock.Models.Cms.SiteDomain)">
            <summary>
            Updates a SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteDomainService.CreateSiteDomain(Rock.Models.Cms.SiteDomain)">
            <summary>
            Creates a new SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteDomainService.DeleteSiteDomain(System.String)">
            <summary>
            Deletes a SiteDomain object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IAuthService">
            <summary>
            Represents a REST WCF service for Auths
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IAuthService.Get(System.String)">
            <summary>
            Gets a Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IAuthService.UpdateAuth(System.String,Rock.Models.Cms.Auth)">
            <summary>
            Updates a Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IAuthService.CreateAuth(Rock.Models.Cms.Auth)">
            <summary>
            Creates a new Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IAuthService.DeleteAuth(System.String)">
            <summary>
            Deletes a Auth object
            </summary>
        </member>
        <member name="T:Rock.Services.Groups.MemberService">
            <summary>
            Member POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Groups.MemberService.GetByGroupId(System.Int32)">
            <summary>
            Gets Members by Group Id
            </summary>
            <param name="groupId">Group Id.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="M:Rock.Services.Groups.MemberService.GetByGuid(System.Guid)">
            <summary>
            Gets Members by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="M:Rock.Services.Groups.MemberService.GetByPersonId(System.Int32)">
            <summary>
            Gets Members by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="T:Rock.Services.Groups.GroupTypeService">
            <summary>
            Group Type POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Groups.GroupTypeService.GetByGuid(System.Guid)">
            <summary>
            Gets Group Types by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of GroupType objects.</returns>
        </member>
        <member name="T:Rock.Services.Core.AttributeQualifierService">
            <summary>
            Attribute Qualifier POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Core.AttributeQualifierService.GetByAttributeId(System.Int32)">
            <summary>
            Gets Attribute Qualifiers by Attribute Id
            </summary>
            <param name="attributeId">Attribute Id.</param>
            <returns>An enumerable list of AttributeQualifier objects.</returns>
        </member>
        <member name="T:Rock.Services.Cms.HtmlContentService">
            <summary>
            Html Content POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.HtmlContentService.GetActiveContentByBlockKey(System.Int32,System.String)">
            <summary>
            Gets the active content by block id and entity value.
            </summary>
            <param name="blockId">The block id.</param>
            <param name="entityValue">The entity value.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Repository.Core.EntityAttributeRepository">
            <summary>
            Attribute POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IAttributeRepository">
            <summary>
            Represents a Attribute POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityAttributeQualifierRepository">
            <summary>
            Attribute Qualifier POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IAttributeQualifierRepository">
            <summary>
            Represents a Attribute Qualifier POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IUserRepository">
            <summary>
            Represents a User POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntitySiteDomainRepository">
            <summary>
            Site Domain POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.ISiteDomainRepository">
            <summary>
            Represents a Site Domain POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.Block">
            <summary>
            Block POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Block.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.Path">
            <summary>
            Gets or sets the Path.
            </summary>
            <value>
            Path.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Block.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            Collection of Block Instances.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Block.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlockConfiguration">
            <summary>
            Block Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlockConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlockConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.ModelUpdatedEventArgs">
            <summary>
            Event argument used when model was added, updated, or deleted
            </summary>
        </member>
        <member name="F:Rock.Models.ModelUpdatedEventArgs.Model">
            <summary>
            The affected model
            </summary>
        </member>
        <member name="F:Rock.Models.ModelUpdatedEventArgs.PersonId">
            <summary>
            The id of the person making the update
            </summary>
        </member>
        <member name="M:Rock.Models.ModelUpdatedEventArgs.#ctor(Rock.Models.IModel,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.ModelUpdatedEventArgs"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="T:Rock.Models.ModelUpdatingEventArgs">
            <summary>
            Event argument used when model is being added, updated, or deleted
            </summary>
        </member>
        <member name="M:Rock.Models.ModelUpdatingEventArgs.#ctor(Rock.Models.IModel,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.ModelUpdatingEventArgs"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Models.ModelUpdatingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether event should be cancelled.
            </summary>
            <value>
              <c>true</c> if event should be canceled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Models.Crm.Address">
            <summary>
            Address POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Crm.Address.UpdateRaw">
            <summary>
            Updates the raw value by concatenating all the parts of the address
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.Address.Raw">
            <summary>
            Gets or sets the Raw.
            </summary>
            <value>
            Raw.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Street1">
            <summary>
            Gets or sets the Street 1.
            </summary>
            <value>
            Street 1.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Street2">
            <summary>
            Gets or sets the Street 2.
            </summary>
            <value>
            Street 2.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.City">
            <summary>
            Gets or sets the City.
            </summary>
            <value>
            City.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.State">
            <summary>
            Gets or sets the State.
            </summary>
            <value>
            State.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Country">
            <summary>
            Gets or sets the Country.
            </summary>
            <value>
            Country.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Zip">
            <summary>
            Gets or sets the Zip.
            </summary>
            <value>
            Zip.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Latitude">
            <summary>
            Gets or sets the Latitude.
            </summary>
            <value>
            Latitude.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.Longitude">
            <summary>
            Gets or sets the Longitude.
            </summary>
            <value>
            Longitude.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.StandardizeAttempt">
            <summary>
            Gets or sets the Standardize Attempt.
            </summary>
            <value>
            Standardize Attempt.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.StandardizeService">
            <summary>
            Gets or sets the Standardize Service.
            </summary>
            <value>
            Standardize Service.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.StandardizeResult">
            <summary>
            Gets or sets the Standardize Result.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.StandardizeDate">
            <summary>
            Gets or sets the Standardize Date.
            </summary>
            <value>
            Standardize Date.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.GeocodeAttempt">
            <summary>
            Gets or sets the Geocode Attempt.
            </summary>
            <value>
            Geocode Attempt.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.GeocodeService">
            <summary>
            Gets or sets the Geocode Service.
            </summary>
            <value>
            Geocode Service.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.GeocodeResult">
            <summary>
            Gets or sets the Geocode Result.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.GeocodeDate">
            <summary>
            Gets or sets the Geocode Date.
            </summary>
            <value>
            Geocode Date.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.Address.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Address.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Crm.AddressConfiguration">
            <summary>
            Address Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Crm.AddressConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Crm.AddressConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.GroupService">
            <summary>
            REST WCF service for Groups
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.IGroupService">
            <summary>
            Represents a REST WCF service for Groups
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupService.Get(System.String)">
            <summary>
            Gets a Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupService.UpdateGroup(System.String,Rock.Models.Groups.Group)">
            <summary>
            Updates a Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupService.CreateGroup(Rock.Models.Groups.Group)">
            <summary>
            Creates a new Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupService.DeleteGroup(System.String)">
            <summary>
            Deletes a Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupService.Get(System.String)">
            <summary>
            Gets a Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupService.UpdateGroup(System.String,Rock.Models.Groups.Group)">
            <summary>
            Updates a Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupService.CreateGroup(Rock.Models.Groups.Group)">
            <summary>
            Creates a new Group object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupService.DeleteGroup(System.String)">
            <summary>
            Deletes a Group object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.ServiceLogService">
            <summary>
            REST WCF service for ServiceLogs
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IServiceLogService">
            <summary>
            Represents a REST WCF service for ServiceLogs
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IServiceLogService.Get(System.String)">
            <summary>
            Gets a ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IServiceLogService.UpdateServiceLog(System.String,Rock.Models.Core.ServiceLog)">
            <summary>
            Updates a ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IServiceLogService.CreateServiceLog(Rock.Models.Core.ServiceLog)">
            <summary>
            Creates a new ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IServiceLogService.DeleteServiceLog(System.String)">
            <summary>
            Deletes a ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.ServiceLogService.Get(System.String)">
            <summary>
            Gets a ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.ServiceLogService.UpdateServiceLog(System.String,Rock.Models.Core.ServiceLog)">
            <summary>
            Updates a ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.ServiceLogService.CreateServiceLog(Rock.Models.Core.ServiceLog)">
            <summary>
            Creates a new ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.ServiceLogService.DeleteServiceLog(System.String)">
            <summary>
            Deletes a ServiceLog object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlogPostService">
            <summary>
            Represents a REST WCF service for BlogPosts
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostService.Get(System.String)">
            <summary>
            Gets a BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostService.UpdateBlogPost(System.String,Rock.Models.Cms.BlogPost)">
            <summary>
            Updates a BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostService.CreateBlogPost(Rock.Models.Cms.BlogPost)">
            <summary>
            Creates a new BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostService.DeleteBlogPost(System.String)">
            <summary>
            Deletes a BlogPost object
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.UserService">
            <summary>
            User POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.UserService.GetByApplicationNameAndUsername(System.String,System.String)">
            <summary>
            Gets User by Application Name And Username
            </summary>
            <param name="applicationName">Application Name.</param>
            <param name="username">Username.</param>
            <returns>User object.</returns>
        </member>
        <member name="M:Rock.Services.Cms.UserService.GetByApplicationNameAndEmail(System.String,System.String)">
            <summary>
            Gets Users by Application Name And Email
            </summary>
            <param name="applicationName">Application Name.</param>
            <param name="email">Email.</param>
            <returns>An enumerable list of User objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.UserService.GetByGuid(System.Guid)">
            <summary>
            Gets User by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>User object.</returns>
        </member>
        <member name="M:Rock.Services.Cms.UserService.GetByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Users by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of User objects.</returns>
        </member>
        <member name="T:Rock.Services.Cms.PageRouteService">
            <summary>
            Page Route POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.PageRouteService.GetByGuid(System.Guid)">
            <summary>
            Gets Page Routes by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of PageRoute objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.PageRouteService.GetByPageId(System.Int32)">
            <summary>
            Gets Page Routes by Page Id
            </summary>
            <param name="pageId">Page Id.</param>
            <returns>An enumerable list of PageRoute objects.</returns>
        </member>
        <member name="T:Rock.Repository.Groups.EntityGroupTypeRepository">
            <summary>
            Group Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Groups.IGroupTypeRepository">
            <summary>
            Represents a Group Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlogRepository">
            <summary>
            Represents a Blog POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityPageRepository">
            <summary>
            Page POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Core.DefinedType">
            <summary>
            Defined Type POCO Entity.
            </summary>
        </member>
        <member name="T:Rock.Models.IOrdered">
            <summary>
            Represents a model that supports specific ordering
            </summary>
        </member>
        <member name="P:Rock.Models.IOrdered.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.FieldTypeId">
            <summary>
            Gets or sets the Field Type Id.
            </summary>
            <value>
            Field Type Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.DefinedValues">
            <summary>
            Gets or sets the Defined Values.
            </summary>
            <value>
            Collection of Defined Values.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.FieldType">
            <summary>
            Gets or sets the Field Type.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Core.DefinedType.FieldType"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Core.DefinedTypeConfiguration">
            <summary>
            Defined Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.DefinedTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.DefinedTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Jobs.RockJobListener">
            <summary>
            Summary description for JobListener
            </summary>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Jobs.RockJobListener"/> class.
            </summary>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobToBeExecuted(Quartz.IJobExecutionContext)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> when a <see cref="T:Quartz.IJobDetail"/>
            is about to be executed (an associated <see cref="T:Quartz.ITrigger"/>
            has occurred).
            <para>
            This method will not be invoked if the execution of the Job was vetoed
            by a <see cref="T:Quartz.ITriggerListener"/>.
            </para>
            </summary>
            <param name="context"></param>
            <seealso cref="M:Rock.Jobs.RockJobListener.JobExecutionVetoed(Quartz.IJobExecutionContext)"/>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobExecutionVetoed(Quartz.IJobExecutionContext)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> when a <see cref="T:Quartz.IJobDetail"/>
            was about to be executed (an associated <see cref="T:Quartz.ITrigger"/>
            has occurred), but a <see cref="T:Quartz.ITriggerListener"/> vetoed it's
            execution.
            </summary>
            <param name="context"></param>
            <seealso cref="M:Rock.Jobs.RockJobListener.JobToBeExecuted(Quartz.IJobExecutionContext)"/>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobWasExecuted(Quartz.IJobExecutionContext,Quartz.JobExecutionException)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> after a <see cref="T:Quartz.IJobDetail"/>
            has been executed, and be for the associated <see cref="!:IOperableTrigger"/>'s
            <see cref="!:IOperableTrigger.Triggered"/> method has been called.
            </summary>
            <param name="context"></param>
            <param name="jobException"></param>
        </member>
        <member name="P:Rock.Jobs.RockJobListener.Name">
            <summary>
            Get the name of the <see cref="T:Quartz.IJobListener"/>.
            </summary>
        </member>
        <member name="T:Rock.Cms.Cached.Page">
            <summary>
            Information about a page that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Page.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Page object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Page.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values for the page
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.DisplayInNav(System.Web.Security.MembershipUser)">
            <summary>
            <c>true</c> or <c>false</c> value of whether the page can be displayed in a navigation menu 
            based on the <see cref="P:Rock.Cms.Cached.Page.DisplayInNavWhen"/> property value and the security of the currently logged in user
            </summary>
            <param name="user">The current user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.FlushBlockInstances">
            <summary>
            Flushes the cached block instances.
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Page.FlushChildPages">
            <summary>
            Flushes the cached child pages.
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Page.SaveSharedItem(System.String,System.Object)">
            <summary>
            Used to save an item to the current HTTPRequests items collection.  This is useful if multiple blocks
            on the same page will need access to the same object.  The first block can read the object and save
            it using this method for the other blocks to reference
            </summary>
            <param name="key"></param>
            <param name="item"></param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.GetSharedItem(System.String)">
            <summary>
            Retrieves an item from the current HTTPRequest items collection.  This is useful to retrieve an object
            that was saved by a previous block on the same page.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.AddCSSLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current System.Web.UI.Page</param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.AddCSSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">The page.</param>
            <param name="href">The href.</param>
            <param name="mediaType">MediaType to use in the css link.</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.AddHtmlLink(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlLink)">
            <summary>
            Adds a new Html link that will be added to the page header prior to the page being rendered
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Page.AddScriptLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new script tag to the page header prior to the page being rendered
            </summary>
            <param name="page">Current System.Web.UI.Page</param>
            <param name="path">Path to script file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.BuildUrl(Rock.Helpers.PageReference,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.BuildUrl(Rock.Helpers.PageReference,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.FormatPath(System.String,System.String)">
            <summary>
            Formats the page url based on the selected theme and layout
            </summary>
            <param name="theme"></param>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.Read(Rock.Models.Cms.Page)">
            <summary>
            Adds Page model to cache, and returns cached object
            </summary>
            <param name="pageModel"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.Read(System.Int32)">
            <summary>
            Returns Page object from cache.  If page does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.Flush(System.Int32)">
            <summary>
            Removes page from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Rock.Cms.Cached.Page.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.Authorized(System.String,System.Web.Security.MembershipUser)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.DefaultAuthorization(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.MenuXml(System.Web.Security.MembershipUser)">
            <summary>
            Returns XML for a page menu.  XML will be 1 level deep
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Page.MenuXml(System.Int32,System.Web.Security.MembershipUser)">
            <summary>
            Returns XML for a page menu.
            </summary>
            <param name="levelsDeep">The page levels deep.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Layout">
            <summary>
            Gets the layout.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.OutputCacheDuration">
            <summary>
            Gets the duration of the output cache.
            </summary>
            <value>
            The duration of the output cache.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Title">
            <summary>
            Gets the title.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.IconUrl">
            <summary>
            Gets the icon URL.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.IncludeAdminFooter">
            <summary>
            Gets a value indicating whether the page administration footer should be displayed on the page
            </summary>
            <value>
              <c>true</c> if the footer should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.MenuDisplayDescription">
            <summary>
            Gets a value indicating whether to display the page description in the page navigation menu.
            </summary>
            <value>
            	<c>true</c> if description should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.MenuDisplayIcon">
            <summary>
            Gets a value indicating whether page icon should be included in the page navigation menu.
            </summary>
            <value>
              <c>true</c> if icon should be included; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.MenuDisplayChildPages">
            <summary>
            Gets a value indicating whether the pages child pages should be displayed in the page navigation menu.
            </summary>
            <value>
            	<c>true</c> if child pages should be included; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.DisplayInNavWhen">
            <summary>
            Gets a <see cref="T:Rock.Models.Cms.DisplayInNavWhen"/> value indicating when or if the page should be included in a page navigation menu
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.RequiresEncryption">
            <summary>
            Gets a value indicating whether the page requires SSL encryption.
            </summary>
            <value>
              <c>true</c> if requires encryption; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.EnableViewstate">
            <summary>
            Gets a value indicating whether the page should use viewstate
            </summary>
            <value>
              <c>true</c> if viewstate should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.RouteId">
            <summary>
            Gets or sets the route id.
            </summary>
            <value>
            The route id.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.PageReference">
            <summary>
            Gets a <see cref="T:Rock.Helpers.PageReference"/> for the current page
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Url">
            <summary>
            Gets the URL to the current page using the page/{id} route.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Attributes">
            <summary>
            List of attributes associated with the page.  This object will not include values.
            To get values associated with the current page instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.LayoutPath">
            <summary>
            Gets or sets the layout path for the page
            </summary>
            <value>
            The layout path.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.ParentPage">
            <summary>
            Gets the parent <see cref="T:Rock.Cms.Cached.Page"/> object.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Site">
            <summary>
            Gets the <see cref="P:Rock.Cms.Cached.Page.Site"/> object for the page.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.Pages">
            <summary>
            Gets a List of child <see cref="T:Rock.Cms.Cached.Page"/> objects.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.BlockInstances">
            <summary>
            Gets a List of all the <see cref="T:Rock.Cms.Cached.BlockInstance"/> objects configured for the page and the page's layout.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.AuthEntity">
            <summary>
            Gets or sets the auth entity.
            </summary>
            <value>
            The auth entity.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Page.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Page.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IEntityChangeService">
            <summary>
            Represents a REST WCF service for EntityChanges
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IEntityChangeService.Get(System.String)">
            <summary>
            Gets a EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IEntityChangeService.UpdateEntityChange(System.String,Rock.Models.Core.EntityChange)">
            <summary>
            Updates a EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IEntityChangeService.CreateEntityChange(Rock.Models.Core.EntityChange)">
            <summary>
            Creates a new EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IEntityChangeService.DeleteEntityChange(System.String)">
            <summary>
            Deletes a EntityChange object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.DefinedTypeService">
            <summary>
            REST WCF service for DefinedTypes
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IDefinedTypeService">
            <summary>
            Represents a REST WCF service for DefinedTypes
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedTypeService.Get(System.String)">
            <summary>
            Gets a DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedTypeService.UpdateDefinedType(System.String,Rock.Models.Core.DefinedType)">
            <summary>
            Updates a DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedTypeService.CreateDefinedType(Rock.Models.Core.DefinedType)">
            <summary>
            Creates a new DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedTypeService.DeleteDefinedType(System.String)">
            <summary>
            Deletes a DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedTypeService.Get(System.String)">
            <summary>
            Gets a DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedTypeService.UpdateDefinedType(System.String,Rock.Models.Core.DefinedType)">
            <summary>
            Updates a DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedTypeService.CreateDefinedType(Rock.Models.Core.DefinedType)">
            <summary>
            Creates a new DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedTypeService.DeleteDefinedType(System.String)">
            <summary>
            Deletes a DefinedType object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlockService">
            <summary>
            Represents a REST WCF service for Blocks
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockService.Get(System.String)">
            <summary>
            Gets a Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockService.UpdateBlock(System.String,Rock.Models.Cms.Block)">
            <summary>
            Updates a Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockService.CreateBlock(Rock.Models.Cms.Block)">
            <summary>
            Creates a new Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockService.DeleteBlock(System.String)">
            <summary>
            Deletes a Block object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.HtmlContentService">
            <summary>
            REST WCF service for HtmlContents
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IHtmlContentService">
            <summary>
            Represents a REST WCF service for HtmlContents
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IHtmlContentService.Get(System.String)">
            <summary>
            Gets a HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IHtmlContentService.UpdateHtmlContent(System.String,Rock.Models.Cms.HtmlContent)">
            <summary>
            Updates a HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IHtmlContentService.CreateHtmlContent(Rock.Models.Cms.HtmlContent)">
            <summary>
            Creates a new HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IHtmlContentService.DeleteHtmlContent(System.String)">
            <summary>
            Deletes a HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.HtmlContentService.Get(System.String)">
            <summary>
            Gets a HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.HtmlContentService.UpdateHtmlContent(System.String,Rock.Models.Cms.HtmlContent)">
            <summary>
            Updates a HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.HtmlContentService.CreateHtmlContent(Rock.Models.Cms.HtmlContent)">
            <summary>
            Creates a new HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.HtmlContentService.DeleteHtmlContent(System.String)">
            <summary>
            Deletes a HtmlContent object
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.SiteService">
            <summary>
            Site POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.SiteService.GetByGuid(System.Guid)">
            <summary>
            Gets Sites by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Site objects.</returns>
        </member>
        <member name="T:Rock.Services.Cms.SiteDomainService">
            <summary>
            Site Domain POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.SiteDomainService.GetByDomain(System.String)">
            <summary>
            Gets Site Domain by Domain
            </summary>
            <param name="domain">Domain.</param>
            <returns>SiteDomain object.</returns>
        </member>
        <member name="M:Rock.Services.Cms.SiteDomainService.GetByGuid(System.Guid)">
            <summary>
            Gets Site Domains by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of SiteDomain objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.SiteDomainService.GetBySiteIdAndDomain(System.Int32,System.String)">
            <summary>
            Gets Site Domains by Site Id And Domain
            </summary>
            <param name="siteId">Site Id.</param>
            <param name="domain">Domain.</param>
            <returns>An enumerable list of SiteDomain objects.</returns>
        </member>
        <member name="T:Rock.Repository.Groups.IGroupRoleRepository">
            <summary>
            Represents a Group Role POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IDefinedTypeRepository">
            <summary>
            Represents a Defined Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.ISiteRepository">
            <summary>
            Represents a Site POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlogPostRepository">
            <summary>
            Blog Post POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlogPostRepository">
            <summary>
            Represents a Blog Post POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityAuthRepository">
            <summary>
            Auth POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Core.FieldType">
            <summary>
            Field Type POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.FieldType.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.Assembly">
            <summary>
            Gets or sets the Assembly.
            </summary>
            <value>
            Assembly.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.Class">
            <summary>
            Gets or sets the Class.
            </summary>
            <value>
            Class.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.FieldType.Attributes">
            <summary>
            Gets or sets the Attributes.
            </summary>
            <value>
            Collection of Attributes.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.DefinedTypes">
            <summary>
            Gets or sets the Defined Types.
            </summary>
            <value>
            Collection of Defined Types.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.FieldType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Core.FieldTypeConfiguration">
            <summary>
            Field Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.FieldTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.FieldTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Cms.CmsPage">
            <summary>
            CmsPage is the base abstract class that all page templates should inherit from
            </summary>
        </member>
        <member name="F:Rock.Cms.CmsPage.UserName">
            <summary>
            The full name of the currently logged in user
            </summary>
        </member>
        <member name="M:Rock.Cms.CmsPage.DefineZones">
            <summary>
            Each layout page should define it's content zones in this method
            <code>
                Zones.Add( "FirstColumn", FirstColumn );
            </code>
            </summary>
        </member>
        <member name="M:Rock.Cms.CmsPage.FindZone(System.String)">
            <summary>
            Find the <see cref="T:System.Web.UI.Control"/> for the specified zone name.  First looks in the
            <see cref="P:Rock.Cms.CmsPage.Zones"/> property to see if it has been defined.  If not will then Recurse through 
            the controls on the page to find a control who's id ends with the specified zone name.
            </summary>
            <remarks>
            If an existing zone <see cref="T:System.Web.UI.Control"/> cannot be found, the <see cref="T:System.Web.UI.HtmlControls.HtmlForm"/> control
            is returned
            </remarks>
            <param name="zoneName">Name of the zone.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsPage.RecurseControls(System.Web.UI.Control,System.String)">
            <summary>
            Recurses the page's control heirarchy looking for any control who's id ends
            with the conrolId property
            </summary>
            <param name="parentControl"></param>
            <param name="controlId"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsPage.InitializeCulture">
            <summary>
            Initializes the page's culture to use the culture specified by the browser ("auto")
            </summary>
        </member>
        <member name="M:Rock.Cms.CmsPage.OnInit(System.EventArgs)">
            <summary>
            Loads all of the configured blocks for the current page into the control tree
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Rock.Cms.CmsPage.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.AttributeValue(System.String)">
            <summary>
            Returns the current page's value(s) for the selected attribute
            If the attribute doesn't exist an empty string is returned.  If there
            is more than one value for the attribute, the values are returned delimited
            by a bar character (|).
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsPage.AddCSSLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.AddCSSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Adds the CSS link.
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
            <param name="mediaType">Type of the media to use for the css link.</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.AddHtmlLink(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlLink)">
            <summary>
            Adds a new Html link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="htmlLink">A <see cref="T:System.Web.UI.HtmlControls.HtmlLink"/> control</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.AddScriptLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new script tag to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="path">Path to script file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.BuildUrl(Rock.Helpers.PageReference,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Cms.CmsPage.BuildUrl(Rock.Helpers.PageReference,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="P:Rock.Cms.CmsPage.PageInstance">
            <summary>
            The current Rock page instance being requested.  This value is set 
            by the RockRouteHandler immediately after instantiating the page
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.Zones">
            <summary>
            The content areas on a layout page that blocks can be added to 
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.CurrentPersonId">
            <summary>
            The Person ID of the currently logged in user.  Returns null if there is not a user logged in
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.CurrentUser">
            <summary>
            Returns the currently logged in user.  Returns null if there is not a user logged in
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.CurrentPerson">
            <summary>
            Returns the currently logged in person.  Returns null if there is not a user logged in
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.AppPath">
            <summary>
            Gets the root url path
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsPage.ThemePath">
            <summary>
            Gets the full url path to the current theme folder
            </summary>
        </member>
        <member name="T:Rock.Cms.BlockInstanceAttributesUpdatedEventArgs">
            <summary>
            Event Argument used when block instance properties are updated
            </summary>
        </member>
        <member name="T:Rock.Cms.JsonResult">
            <summary>
            JSON Object used for client/server communication
            </summary>
        </member>
        <member name="M:Rock.Cms.JsonResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Cms.JsonResult"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Rock.Cms.JsonResult.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rock.Cms.JsonResult.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Rock.Cms.JsonResult.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="T:Rock.Cms.Cached.FieldType">
            <summary>
            Information about a fieldType that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.FieldType.#ctor">
            <summary>
            Use Static Read() method to instantiate a new FieldType object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.FieldType.Read(System.Int32)">
            <summary>
            Returns FieldType object from cache.  If fieldType does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.FieldType.Flush(System.Int32)">
            <summary>
            Removes fieldType from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Cms.Cached.FieldType.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.FieldType.Path">
            <summary>
            Gets the path.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.FieldType.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.FieldType.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.FieldType.Field">
            <summary>
            Gets the field 
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.GroupRoleService">
            <summary>
            REST WCF service for GroupRoles
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.IGroupRoleService">
            <summary>
            Represents a REST WCF service for GroupRoles
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupRoleService.Get(System.String)">
            <summary>
            Gets a GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupRoleService.UpdateGroupRole(System.String,Rock.Models.Groups.GroupRole)">
            <summary>
            Updates a GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupRoleService.CreateGroupRole(Rock.Models.Groups.GroupRole)">
            <summary>
            Creates a new GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupRoleService.DeleteGroupRole(System.String)">
            <summary>
            Deletes a GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupRoleService.Get(System.String)">
            <summary>
            Gets a GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupRoleService.UpdateGroupRole(System.String,Rock.Models.Groups.GroupRole)">
            <summary>
            Updates a GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupRoleService.CreateGroupRole(Rock.Models.Groups.GroupRole)">
            <summary>
            Creates a new GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupRoleService.DeleteGroupRole(System.String)">
            <summary>
            Deletes a GroupRole object
            </summary>
        </member>
        <member name="T:Rock.Services.Core.ServiceLogService">
            <summary>
            Service Log POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.BlogService">
            <summary>
            Blog POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Services.IFeed">
            <summary>
            Represents a model that supports generating a feed
            </summary>
        </member>
        <member name="M:Rock.Services.IFeed.ReturnFeed(System.Int32,System.Int32,System.String,System.String@,System.String@)">
            <summary>
            Returns the feed.
            </summary>
            <param name="key">The key.</param>
            <param name="count">The count.</param>
            <param name="format">The format.</param>
            <param name="errorMessage">The error message.</param>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Cms.BlogService.ReturnFeed(System.Int32,System.Int32,System.String,System.String@,System.String@)">
            <summary>
            Returns the feed.
            </summary>
            <param name="key">The key.</param>
            <param name="count">The count.</param>
            <param name="format">The format.</param>
            <param name="errorMessage">The error message.</param>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Repository.Util.EntityJobRepository">
            <summary>
            Job POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Crm.IPhoneNumberRepository">
            <summary>
            Represents a Phone Number POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IHtmlContentRepository">
            <summary>
            Represents a Html Content POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlogCategoryRepository">
            <summary>
            Represents a Blog Category POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityUserRepository">
            <summary>
            User POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlogRepository">
            <summary>
            Blog POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlockRepository">
            <summary>
            Block POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlockRepository">
            <summary>
            Represents a Block POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.BlogPostComment">
            <summary>
            Blog Post Comment POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.PostId">
            <summary>
            Gets or sets the Post Id.
            </summary>
            <value>
            Post Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.PersonName">
            <summary>
            Gets or sets the Person Name.
            </summary>
            <value>
            Person Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.CommentDate">
            <summary>
            Gets or sets the Comment Date.
            </summary>
            <value>
            Comment Date.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.EmailAddress">
            <summary>
            Gets or sets the Email Address.
            </summary>
            <value>
            Email Address.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.Comment">
            <summary>
            Gets or sets the Comment.
            </summary>
            <value>
            Comment.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.Post">
            <summary>
            Gets or sets the Post.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Cms.BlogPost"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogPostComment.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogPostCommentConfiguration">
            <summary>
            Blog Post Comment Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlogPostCommentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlogPostCommentConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Controls.NotificationBox">
            <summary>
            Displays a standard warning or error message box
            </summary>
        </member>
        <member name="M:Rock.Controls.NotificationBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:Rock.Controls.NotificationBox.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Rock.Controls.NotificationBox.NotificationBoxType">
            <summary>
            Gets or sets the type of the notification box.
            </summary>
            <value>
            The type of the notification box.
            </value>
        </member>
        <member name="T:Rock.Controls.NotificationBoxType">
            <summary>
            The type of notification box to display
            </summary>
        </member>
        <member name="F:Rock.Controls.NotificationBoxType.Information">
            <summary>
            Display an information box
            </summary>
        </member>
        <member name="F:Rock.Controls.NotificationBoxType.Warning">
            <summary>
            Display a warning box
            </summary>
        </member>
        <member name="F:Rock.Controls.NotificationBoxType.Error">
            <summary>
            Display an error box
            </summary>
        </member>
        <member name="F:Rock.Controls.NotificationBoxType.Tip">
            <summary>
            Display a tip box
            </summary>
        </member>
        <member name="F:Rock.Controls.NotificationBoxType.Success">
            <summary>
            Display a success box
            </summary>
        </member>
        <member name="T:Rock.Controls.BoolField">
            <summary>
            <see cref="T:Rock.Controls.Grid"/> Column to display a boolean value.
            </summary>
        </member>
        <member name="M:Rock.Controls.BoolField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Initializes the <see cref="T:System.Web.UI.WebControls.BoundField"/> object.
            </summary>
            <param name="enableSorting">true if sorting is supported; otherwise, false.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField"/>.</param>
            <returns>
            false in all cases.
            </returns>
        </member>
        <member name="M:Rock.Controls.BoolField.FormatDataValue(System.Object,System.Boolean)">
            <summary>
            Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField"/> object.
            </summary>
            <param name="dataValue">The field value to format.</param>
            <param name="encode">true to encode the value; otherwise, false.</param>
            <returns>
            The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString"/>.
            </returns>
        </member>
        <member name="T:Rock.Controls.EditField">
            <summary>
            <see cref="T:Rock.Controls.Grid"/> Column for editing a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Controls.EditField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="M:Rock.Controls.EditField.editFieldTemplate_LinkButtonClick(System.Object,Rock.Controls.RowEventArgs)">
            <summary>
            Handles the LinkButtonClick event of the editFieldTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.EditField.OnClick(Rock.Controls.RowEventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Controls.EditField.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="T:Rock.Controls.EditFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Controls.EditField"/> control
            </summary>
        </member>
        <member name="M:Rock.Controls.EditFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Controls.EditFieldTemplate.lbEdit_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbEdit control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Controls.EditFieldTemplate.LinkButtonClick">
            <summary>
            Occurs when [link button click].
            </summary>
        </member>
        <member name="T:Rock.Cms.CmsBlock">
            <summary>
            CmsBlock is the base abstract class that all Blocks should inherit from
            </summary>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AddCacheItem(System.Object)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="value">Object to cache</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AddCacheItem(System.String,System.Object)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AddCacheItem(System.String,System.Object,System.Int32)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
            <param name="seconds">The Number of seconds to cache object for</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AddCacheItem(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
            <param name="cacheItemPolicy">Optional CacheItemPolicy, defaults to null</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.GetCacheItem(System.String)">
            <summary>
            Retrieve an object from the cache
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsBlock.FlushCacheItem(System.String)">
            <summary>
            Flush an object from the cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AddAttributeUpdateTrigger(System.Web.UI.UpdatePanel)">
            <summary>
            Adds an update trigger for when the block instance properties are updated.
            </summary>
            <param name="updatePanel">The update panel.</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            When a control renders it's content to the page, this method will also check to see if 
            the block instance of this control has been configured for output caching, and if so, 
            the contents will also be rendered to a string variable that will gets cached in the 
            default MemoryCache for use next time by the CmsPage.OnInit() method when rendering the 
            control content.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.OnError(System.EventArgs)">
            <summary>
            When an unhandled error occurs in a module, a notification box will be displayed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.DisplayNotification(System.String,Rock.Controls.NotificationBoxType,System.String)">
            <summary>
            Clear all child controls and add a notification box with error or warning message
            </summary>
            <param name="title"></param>
            <param name="type"></param>
            <param name="message"></param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.DisplayError(System.String)">
            <summary>
            Clear all child controls and add a notification box with an error message
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.DisplayWarning(System.String)">
            <summary>
            Clear all child controls and add a notification box with a warning message
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.AttributeValue(System.String)">
            <summary>
            Returns the current blockinstance value for the selected attribute
            If the attribute doesn't exist a null value is returned  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsBlock.UserAuthorized(System.String)">
            <summary>
            Evaluates if the user is authorized to perform the requested action 
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsBlock.PageParameter(System.String)">
            <summary>
            Checks the page's RouteData values and then the query string for a
            parameter matching the specified name, and if found returns the string
            value
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsBlock.GetConfigurationControls(System.Boolean,System.Boolean)">
            <summary>
            Adds icons to the configuration area of a block instance.  Can be overridden to
            add additionsl icons
            </summary>
            <param name="canConfig"></param>
            <param name="canEdit"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.CmsBlock.trigger_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the trigger control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Cms.CmsBlock.CreateAttributes">
            <summary>
            Creates and or updates any attributes defined for the block
            </summary>
        </member>
        <member name="M:Rock.Cms.CmsBlock.CmsBlock_BlockInstanceAttributesUpdated(System.Object,Rock.Cms.BlockInstanceAttributesUpdatedEventArgs)">
            <summary>
            Handles the BlockInstanceAttributesUpdated event of the CmsBlock control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Cms.BlockInstanceAttributesUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Cms.CmsBlock.AttributesUpdated">
            <summary>
            Occurs when the block instance properties are updated.
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.PageInstance">
            <summary>
            The current page instance.  This value is read and cached by the RockRouteHandler
            and set by the layout's base class (CmsPage) when loading the block instance
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.BlockInstance">
            <summary>
            The current block instance.  This value is read and cached by the layout's 
            base class (CmsPage) when loading the block instance
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.CurrentPersonId">
            <summary>
            The personID of the currently logged in user.  If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.CurrentUser">
            <summary>
            Returns the currently logged in user.  If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.CurrentPerson">
            <summary>
            Returns the currently logged in person. If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Cms.CmsBlock.ThemePath">
            <summary>
            Relative path to the current theme and layout folder.  Useful for setting paths to
            theme resource files
            <example>
            Client Side: <c><![CDATA[<img src='<%= ThemePath %>/Images/avatar.gif' />]]> </c>
            Server Side: <c>myImg.ImageUrl = ThemePath + "/Images/avatar.gif";</c>
            </example>
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.IMemberService">
            <summary>
            Represents a REST WCF service for Members
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IMemberService.Get(System.String)">
            <summary>
            Gets a Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IMemberService.UpdateMember(System.String,Rock.Models.Groups.Member)">
            <summary>
            Updates a Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IMemberService.CreateMember(Rock.Models.Groups.Member)">
            <summary>
            Creates a new Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IMemberService.DeleteMember(System.String)">
            <summary>
            Deletes a Member object
            </summary>
        </member>
        <member name="T:Rock.Validation.DataAnnotationValidator">
            <summary>
            Data Annotation Validator for validating based on data attributes
            </summary>
        </member>
        <member name="M:Rock.Validation.DataAnnotationValidator.EvaluateIsValid">
            <summary>
            When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.
            </summary>
            <returns>
            true if the value in the input control is valid; otherwise, false.
            </returns>
        </member>
        <member name="P:Rock.Validation.DataAnnotationValidator.SourceTypeName">
            <summary>
            The type of the source to check
            </summary>
        </member>
        <member name="P:Rock.Validation.DataAnnotationValidator.PropertyName">
            <summary>
            The property that is annotated
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.FileService">
            <summary>
            File POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.FileService.GetByGuid(System.String)">
            <summary>
            Gets the file by GUID.
            </summary>
            <param name="guidString">The GUID string.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Services.Cms.BlogPostService">
            <summary>
            Blog Post POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IServiceLogRepository">
            <summary>
            Represents a Service Log POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlockInstanceRepository">
            <summary>
            Represents a Block Instance POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlogPostCommentRepository">
            <summary>
            Blog Post Comment POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlogPostCommentRepository">
            <summary>
            Represents a Blog Post Comment POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlockInstanceRepository">
            <summary>
            Block Instance POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Crm.Person">
            <summary>
            Person POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.Person.FullName">
            <summary>
            Gets the full name.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.Person.BirthDate">
            <summary>
            Gets or sets the birth date.
            </summary>
            <value>
            The birth date.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.FirstName">
            <summary>
            Gets or sets the First Name.
            </summary>
            <value>
            First Name.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.NickName">
            <summary>
            Gets or sets the Nick Name.
            </summary>
            <value>
            Nick Name.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.LastName">
            <summary>
            Gets or sets the Last Name.
            </summary>
            <value>
            Last Name.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.Email">
            <summary>
            Gets or sets the Email.
            </summary>
            <value>
            Email.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.BirthMonth">
            <summary>
            Gets or sets the Birth Month.
            </summary>
            <value>
            Birth Month.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.BirthDay">
            <summary>
            Gets or sets the Birth Day.
            </summary>
            <value>
            Birth Day.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.BirthYear">
            <summary>
            Gets or sets the Birth Year.
            </summary>
            <value>
            Birth Year.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.Person.BlogPosts">
            <summary>
            Gets or sets the Blog Posts.
            </summary>
            <value>
            Collection of Blog Posts.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.BlogPostComments">
            <summary>
            Gets or sets the Blog Post Comments.
            </summary>
            <value>
            Collection of Blog Post Comments.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.Users">
            <summary>
            Gets or sets the Users.
            </summary>
            <value>
            Collection of Users.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.PhoneNumbers">
            <summary>
            Gets or sets the Phone Numbers.
            </summary>
            <value>
            Collection of Phone Numbers.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.Person.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Crm.PhoneNumber">
            <summary>
            Phone Number POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.Number">
            <summary>
            Gets or sets the Number.
            </summary>
            <value>
            Number.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Crm.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Crm.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Crm.PhoneNumber.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Crm.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Crm.PhoneNumberConfiguration">
            <summary>
            Phone Number Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Crm.PhoneNumberConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Crm.PhoneNumberConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.HtmlContentConfiguration">
            <summary>
            Html Content Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.HtmlContentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.HtmlContentConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Helpers.PageReference">
            <summary>
            Helper class to work with the PageReference field type
            </summary>
        </member>
        <member name="M:Rock.Helpers.PageReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Helpers.PageReference"/> class.
            </summary>
        </member>
        <member name="M:Rock.Helpers.PageReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Helpers.PageReference"/> class.
            </summary>
            <param name="reference">The reference.</param>
        </member>
        <member name="M:Rock.Helpers.PageReference.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Helpers.PageReference"/> class.
            </summary>
            <param name="pageId">The page id.</param>
            <param name="routeId">The route id.</param>
        </member>
        <member name="P:Rock.Helpers.PageReference.PageId">
            <summary>
            Gets the page id.
            </summary>
        </member>
        <member name="P:Rock.Helpers.PageReference.RouteId">
            <summary>
            Gets the route id.
            </summary>
        </member>
        <member name="P:Rock.Helpers.PageReference.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Attribute.Helper">
            <summary>
            Static Helper class for creating, saving, and reading attributes and attribute values of any <see cref="T:Rock.Attribute.IHasAttributes"/> class
            </summary>
        </member>
        <member name="M:Rock.Attribute.Helper.CreateAttributes(System.Type,System.String,System.Nullable{System.Int32})">
            <param name="type">The type (should be a <see cref="T:Rock.Attribute.IHasAttributes"/> object.</param>
            <param name="entity">The entity.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.CreateAttributes(System.Type,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Uses reflection to find any <see cref="T:Rock.Attribute.PropertyAttribute"/> attributes for the specified type and will create and/or update
            a <see cref="T:Rock.Models.Core.Attribute"/> record for each attribute defined.
            </summary>
            <param name="type">The type (should be a <see cref="T:Rock.Attribute.IHasAttributes"/> object.</param>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.LoadAttributes(Rock.Attribute.IHasAttributes)">
            <summary>
            Loads the <see cref="P:IHasAttributes.Attributes"/> and <see cref="P:IHasAttributes.AttributeValues"/> of any <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.SaveAttributeValue(Rock.Attribute.IHasAttributes,Rock.Cms.Cached.Attribute,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves an attribute value.
            </summary>
            <param name="model">The model.</param>
            <param name="attribute">The attribute.</param>
            <param name="value">The value.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.GetEditControls(Rock.Attribute.IHasAttributes,System.Boolean)">
            <summary>
            Helper method to generate a list of <![CDATA[<li>]]> tags that contain the appropriate html edit
            control returned by each attribute's <see cref="T:Rock.FieldTypes.IFieldType"/>
            </summary>
            <param name="item">The item.</param>
            <param name="setValue">if set to <c>true</c> set the edit control's value based on the attribute value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.GetEditValues(System.Web.UI.Control,Rock.Attribute.IHasAttributes)">
            <summary>
            Gets the values entered into the edit controls generated by the <see cref="M:Rock.Attribute.Helper.GetEditControls(Rock.Attribute.IHasAttributes,System.Boolean)"/> method and sets the <see cref="P:IHasAttributes.AttributeValues"/> of 
            the <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Rock.Api.Core.EntityChangeService">
            <summary>
            REST WCF service for EntityChanges
            </summary>
        </member>
        <member name="M:Rock.Api.Core.EntityChangeService.Get(System.String)">
            <summary>
            Gets a EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.EntityChangeService.UpdateEntityChange(System.String,Rock.Models.Core.EntityChange)">
            <summary>
            Updates a EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.EntityChangeService.CreateEntityChange(Rock.Models.Core.EntityChange)">
            <summary>
            Creates a new EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.EntityChangeService.DeleteEntityChange(System.String)">
            <summary>
            Deletes a EntityChange object
            </summary>
        </member>
        <member name="T:Rock.Address.AddressStub">
            <summary>
            Used to pass and return address information to the standardization and geocoding WCF
            services
            </summary>
        </member>
        <member name="M:Rock.Address.AddressStub.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Address.AddressStub"/> class.
            </summary>
        </member>
        <member name="M:Rock.Address.AddressStub.#ctor(Rock.Models.Crm.Address)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Address.AddressStub"/> class.
            </summary>
            <param name="addressModel">a <see cref="T:Rock.Models.Crm.Address"/> model.</param>
        </member>
        <member name="P:Rock.Address.AddressStub.Street1">
            <summary>
            Gets or sets the street1.
            </summary>
            <value>
            The street1.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.Street2">
            <summary>
            Gets or sets the street2.
            </summary>
            <value>
            The street2.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>
            The city.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.Zip">
            <summary>
            Gets or sets the zip.
            </summary>
            <value>
            The zip.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.StandardizeService">
            <summary>
            Gets or sets the standardize service.
            </summary>
            <value>
            The standardize service.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.StandardizeResult">
            <summary>
            Gets or sets the standardize result.
            </summary>
            <value>
            The standardize result.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.GeocodeService">
            <summary>
            Gets or sets the geocode service.
            </summary>
            <value>
            The geocode service.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.GeocodeResult">
            <summary>
            Gets or sets the geocode result.
            </summary>
            <value>
            The geocode result.
            </value>
        </member>
        <member name="P:Rock.Address.AddressStub.Raw">
            <summary>
            Gets the raw address (the Street1, Street2, City, State, and Zip concatenated together)
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlockService">
            <summary>
            REST WCF service for Blocks
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockService.Get(System.String)">
            <summary>
            Gets a Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockService.UpdateBlock(System.String,Rock.Models.Cms.Block)">
            <summary>
            Updates a Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockService.CreateBlock(Rock.Models.Cms.Block)">
            <summary>
            Creates a new Block object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockService.DeleteBlock(System.String)">
            <summary>
            Deletes a Block object
            </summary>
        </member>
        <member name="T:Rock.Services.Core.EntityChangeService">
            <summary>
            Entity Change POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Core.EntityChangeService.GetByChangeSet(System.Guid)">
            <summary>
            Gets Entity Changes by Change Set
            </summary>
            <param name="changeSet">Change Set.</param>
            <returns>An enumerable list of EntityChange objects.</returns>
        </member>
        <member name="T:Rock.Services.Cms.AuthService">
            <summary>
            Auth POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.AuthService.GetByEntityTypeAndEntityId(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets Auths by Entity Type And Entity Id
            </summary>
            <param name="entityType">Entity Type.</param>
            <param name="entityId">Entity Id.</param>
            <returns>An enumerable list of Auth objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.AuthService.GetByGuid(System.Guid)">
            <summary>
            Gets Auths by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Auth objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.AuthService.GetAuths(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the authorizations for the entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Repository.Crm.IAddressRepository">
            <summary>
            Represents a Address POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntitySiteRepository">
            <summary>
            Site POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityPageRouteRepository">
            <summary>
            Page Route POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IPageRouteRepository">
            <summary>
            Represents a Page Route POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Core.AttributeValue">
            <summary>
            Attribute Value POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.AttributeId">
            <summary>
            Gets or sets the Attribute Id.
            </summary>
            <value>
            Attribute Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.Attribute">
            <summary>
            Gets or sets the Attribute.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Core.AttributeValue.Attribute"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeValue.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Core.AttributeValueConfiguration">
            <summary>
            Attribute Value Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.AttributeValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.AttributeValueConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.PageRoute">
            <summary>
            Page Route POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.Route">
            <summary>
            Gets or sets the Route.
            </summary>
            <value>
            Route.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.Page">
            <summary>
            Gets or sets the Page.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.PageRoute.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.PageRoute.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.PageRouteConfiguration">
            <summary>
            Page Route Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.PageRouteConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.PageRouteConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.Auth">
            <summary>
            Auth POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.Auth.DefaultAuthorization(System.String)">
            <summary>
            The default authorization for a specific action.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Models.Cms.Auth.EntityType">
            <summary>
            Gets or sets the Entity Type.
            </summary>
            <value>
            Entity Type.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.AllowOrDeny">
            <summary>
            Gets or sets the Allow Or Deny.
            </summary>
            <value>
            A = Allow, D = Deny.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.UserOrRole">
            <summary>
            Gets or sets the User Or Role.
            </summary>
            <value>
            U = User, R = Role.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.Action">
            <summary>
            Gets or sets the Action.
            </summary>
            <value>
            Action.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.UserOrRoleName">
            <summary>
            Gets or sets the User Or Role Name.
            </summary>
            <value>
            User Or Role Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Auth.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Auth.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.AuthConfiguration">
            <summary>
            Auth Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.AuthConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.AuthConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Cms.SystemGuids">
            <summary>
            Static Guids used by the Rock ChMS application
            </summary>
        </member>
        <member name="P:Rock.Cms.SystemGuids.JOB_PULSE_ATTRIBUTE_GUID">
            <summary>
            Job Pulse Attribute Guid
            </summary>
        </member>
        <member name="T:Rock.Api.Util.IJobService">
            <summary>
            Represents a REST WCF service for Jobs
            </summary>
        </member>
        <member name="M:Rock.Api.Util.IJobService.Get(System.String)">
            <summary>
            Gets a Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.IJobService.UpdateJob(System.String,Rock.Models.Util.Job)">
            <summary>
            Updates a Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.IJobService.CreateJob(Rock.Models.Util.Job)">
            <summary>
            Creates a new Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.IJobService.DeleteJob(System.String)">
            <summary>
            Deletes a Job object
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.MemberService">
            <summary>
            REST WCF service for Members
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.MemberService.Get(System.String)">
            <summary>
            Gets a Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.MemberService.UpdateMember(System.String,Rock.Models.Groups.Member)">
            <summary>
            Updates a Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.MemberService.CreateMember(Rock.Models.Groups.Member)">
            <summary>
            Creates a new Member object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.MemberService.DeleteMember(System.String)">
            <summary>
            Deletes a Member object
            </summary>
        </member>
        <member name="T:Rock.Address.Geocode.StrikeIron">
            <summary>
            The USAddressVerification service from <a href="http://www.strikeiron.com/Home.aspx">StrikeIron</a>
            </summary>
        </member>
        <member name="T:Rock.Address.GeocodeService">
            <summary>
            Abstract class that Geocoding Service classes should derive from.  
            <example>
            The derived class should define the following type attributes
            </example>
            <code>
                [Description("<i>description of service</i>")]
                [Export( typeof( StandardizeService ) )]
                [ExportMetadata( "ServiceName", "<i>Name of Service</i>" )]
            </code>
            <example>
            The derived class can also optionally define one or more property type attributes
            </example>
            <code>
                [Rock.Attribute.Property( 1, "License Key", "The Required License Key" )]
            </code>
            <example>
            To get the value of a property, the derived class can use the AttributeValues property
            </example>
            <code>
                string licenseKey = AttributeValues["LicenseKey"].Value;
            </code>
            </summary>
        </member>
        <member name="M:Rock.Address.GeocodeService.Geocode(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Abstract method for geocoding the specified address.  Derived classes should implement
            this method to geocode the address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result code unique to the service.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="M:Rock.Address.GeocodeService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Address.GeocodeService"/> class.
            </summary>
        </member>
        <member name="P:Rock.Address.GeocodeService.Id">
            <summary>
            Gets the id.  The id is a unique value generated by the framework when the class is loaded by the GeocodeContainer
            </summary>
        </member>
        <member name="P:Rock.Address.GeocodeService.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <remarks>
            The attributes returned by this property will not contain attribute values.
            To get values, the AttributeValues property should be used
            </remarks>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Address.GeocodeService.AttributeValues">
            <summary>
            Gets or sets the attribute values.
            </summary>
            <value>
            The attribute values in the format of Dictionary[Attribute Key, KeyValuePair[Attribute Name, Attribute Value]]
            </value>
        </member>
        <member name="P:Rock.Address.GeocodeService.Order">
            <summary>
            Gets the order. 
            </summary>
        </member>
        <member name="M:Rock.Address.Geocode.StrikeIron.Geocode(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result.</param>
            <returns>
            True/False value of whether the address was standardized was succesfully
            </returns>
        </member>
        <member name="T:Rock.Api.Cms.IPageRouteService">
            <summary>
            Represents a REST WCF service for PageRoutes
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageRouteService.Get(System.String)">
            <summary>
            Gets a PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageRouteService.UpdatePageRoute(System.String,Rock.Models.Cms.PageRoute)">
            <summary>
            Updates a PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageRouteService.CreatePageRoute(Rock.Models.Cms.PageRoute)">
            <summary>
            Creates a new PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IPageRouteService.DeletePageRoute(System.String)">
            <summary>
            Deletes a PageRoute object
            </summary>
        </member>
        <member name="T:Rock.Address.Standardize.MelissaData">
            <summary>
            The AddressCheck service from <a href="http://www.melissadata.com/">Melissa Data</a>
            </summary>
        </member>
        <member name="T:Rock.Address.StandardizeService">
            <summary>
            Abstract class that Standardization Service classes should derive from.  
            <example>
            The derived class should define the following type attributes
            </example>
            <code>
                [Description("<i>description of service</i>")]
                [Export( typeof( StandardizeService ) )]
                [ExportMetadata( "ServiceName", "<i>Name of Service</i>" )]
            </code>
            <example>
            The derived class can also optionally define one or more property type attributes
            </example>
            <code>
                [Rock.Attribute.Property( 1, "License Key", "The Required License Key" )]
            </code>
            <example>
            To get the value of a property, the derived class can use the AttributeValues property
            </example>
            <code>
                string licenseKey = AttributeValues["LicenseKey"].Value;
            </code>
            </summary>
        </member>
        <member name="M:Rock.Address.StandardizeService.Standardize(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Abstract method for standardizing the specified address.  Derived classes should implement
            this method to standardize the address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result code unique to the service.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="M:Rock.Address.StandardizeService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Address.StandardizeService"/> class.
            </summary>
        </member>
        <member name="P:Rock.Address.StandardizeService.Id">
            <summary>
            Gets the id.  The id is a unique value generated by the framework when the class is loaded by the GeocodeContainer
            </summary>
        </member>
        <member name="P:Rock.Address.StandardizeService.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <remarks>
            The attributes returned by this property will not contain attribute values.
            To get values, the AttributeValues property should be used
            </remarks>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Address.StandardizeService.AttributeValues">
            <summary>
            Gets or sets the attribute values.
            </summary>
            <value>
            The attribute values in the format of Dictionary[Attribute Key, KeyValuePair[Attribute Name, Attribute Value]]
            </value>
        </member>
        <member name="P:Rock.Address.StandardizeService.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="M:Rock.Address.Standardize.MelissaData.Standardize(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Standardizes the address
            </summary>
            <param name="address">The address.</param>
            <param name="result">The AddressCheck result code</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="T:Rock.Services.Core.DefinedTypeService">
            <summary>
            Defined Type POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.BlogPostCommentService">
            <summary>
            Blog Post Comment POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Repository.Groups.EntityMemberRepository">
            <summary>
            Member POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Crm.EntityPersonRepository">
            <summary>
            Person POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Crm.IPersonRepository">
            <summary>
            Represents a Person POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Groups.GroupType">
            <summary>
            Group Type POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.DefaultGroupRoleId">
            <summary>
            Gets or sets the Default Group Role Id.
            </summary>
            <value>
            Default Group Role Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            Collection of Groups.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.ChildGroupTypes">
            <summary>
            Gets or sets the Child Group Types.
            </summary>
            <value>
            Collection of Child Group Types.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.ParentGroupTypes">
            <summary>
            Gets or sets the Parent Group Types.
            </summary>
            <value>
            Collection of Parent Group Types.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.GroupRoles">
            <summary>
            Gets or sets the Group Roles.
            </summary>
            <value>
            Collection of Group Roles.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupType.DefaultGroupRole">
            <summary>
            Gets or sets the Default Group Role.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Groups.GroupRole"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Groups.GroupTypeConfiguration">
            <summary>
            Group Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Groups.GroupTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Groups.GroupTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Core.ServiceLog">
            <summary>
            Service Log POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Time">
            <summary>
            Gets or sets the Time.
            </summary>
            <value>
            Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Input">
            <summary>
            Gets or sets the Input.
            </summary>
            <value>
            Input.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Type">
            <summary>
            Gets or sets the Type.
            </summary>
            <value>
            Type.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Result">
            <summary>
            Gets or sets the Result.
            </summary>
            <value>
            Result.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.Success">
            <summary>
            Gets or sets the Success.
            </summary>
            <value>
            Success.
            </value>
        </member>
        <member name="P:Rock.Models.Core.ServiceLog.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Models.Core.ServiceLogConfiguration">
            <summary>
            Service Log Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.ServiceLogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.ServiceLogConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Controls.HtmlGenericContainer">
            <summary>
            An HtmlGenericContainer that implements the INamingContainer interface
            </summary>
        </member>
        <member name="M:Rock.Controls.HtmlGenericContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Controls.HtmlGenericContainer"/> class.
            </summary>
        </member>
        <member name="M:Rock.Controls.HtmlGenericContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Controls.HtmlGenericContainer"/> class.
            </summary>
            <param name="tag">The name of the element for which this instance of the class is created.</param>
        </member>
        <member name="T:Rock.Attribute.PropertyAttribute">
            <summary>
            A class Attribute that can be used by any oject that inherits from <see cref="T:Rock.Attribute.IHasAttributes"/> to specify what attributes it needs.  The 
            Framework provides methods in the <see cref="T:Rock.Attribute.Helper"/> class to create, read, and update the attributes
            </summary>
            <remarks>
            If using a custom <see cref="T:Rock.FieldTypes.IFieldType"/> make sure that the fieldtype has been added to Rock.
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field with no default value or description.  
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <remarks>
            <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            <see cref="P:Rock.Attribute.PropertyAttribute.Description"/> is initialized as an empty string.
            <see cref="P:Rock.Attribute.PropertyAttribute.DefaultValue"/> is initialized as an empty string.
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock.Framework</c>
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.FieldTypes.Text</c>
            </remarks>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field with no default value.  
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <remarks>
            <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            <see cref="P:Rock.Attribute.PropertyAttribute.DefaultValue"/> is initialized as an empty string.
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock.Framework</c>
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.FieldTypes.Text</c>
            </remarks>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field.
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <remarks>
            <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock.Framework</c>
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.FieldTypes.Text</c>
            </remarks>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field.
            </summary>
            <remarks>
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock.Framework</c>
            <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.FieldTypes.Text</c>
            </remarks>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="key">The key.</param>
            <param name="description">The description.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="key">The key.</param>
            <param name="description">The description.</param>
            <param name="defaultValue">The default value.</param>
            <param name="fieldTypeAssembly">The field type assembly.</param>
            <param name="fieldTypeClass">The field type class.</param>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.UpdateAttribute(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds or Updates a <see cref="T:Rock.Models.Core.Attribute"/> item for the attribute.
            </summary>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Key">
            <summary>
            Gets or sets the attribute key.
            </summary>
            <remarks>
            The key should be unique for each <see cref="T:Rock.Attribute.PropertyAttribute"/> defined in a <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </remarks>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Name">
            <summary>
            Gets or sets the user-friendly name of the attribute
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Description">
            <summary>
            Gets or sets the description of the attribute
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.DefaultValue">
            <summary>
            Gets or sets the default value of the attribute.  This is the value that will be used if a specific value has not yet been created
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Order">
            <summary>
            Gets or sets the order of the attribute.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly">
            <summary>
            Gets or sets the assembly name of the <see cref="T:Rock.FieldTypes.IFieldType"/> to be used for the attribute
            </summary>
            <value>
            The field type assembly.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.FieldTypeClass">
            <summary>
            Gets or sets the class name of the <see cref="T:Rock.FieldTypes.IFieldType"/> to be used for the attribute.
            </summary>
            <value>
            The field type class.
            </value>
        </member>
        <member name="T:Rock.Api.Groups.IGroupTypeService">
            <summary>
            Represents a REST WCF service for GroupTypes
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupTypeService.Get(System.String)">
            <summary>
            Gets a GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupTypeService.UpdateGroupType(System.String,Rock.Models.Groups.GroupType)">
            <summary>
            Updates a GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupTypeService.CreateGroupType(Rock.Models.Groups.GroupType)">
            <summary>
            Creates a new GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.IGroupTypeService.DeleteGroupType(System.String)">
            <summary>
            Deletes a GroupType object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IDefinedValueService">
            <summary>
            Represents a REST WCF service for DefinedValues
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedValueService.Get(System.String)">
            <summary>
            Gets a DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedValueService.UpdateDefinedValue(System.String,Rock.Models.Core.DefinedValue)">
            <summary>
            Updates a DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedValueService.CreateDefinedValue(Rock.Models.Core.DefinedValue)">
            <summary>
            Creates a new DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IDefinedValueService.DeleteDefinedValue(System.String)">
            <summary>
            Deletes a DefinedValue object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.AttributeQualifierService">
            <summary>
            REST WCF service for AttributeQualifiers
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeQualifierService.Get(System.String)">
            <summary>
            Gets a AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeQualifierService.UpdateAttributeQualifier(System.String,Rock.Models.Core.AttributeQualifier)">
            <summary>
            Updates a AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeQualifierService.CreateAttributeQualifier(Rock.Models.Core.AttributeQualifier)">
            <summary>
            Creates a new AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeQualifierService.DeleteAttributeQualifier(System.String)">
            <summary>
            Deletes a AttributeQualifier object
            </summary>
        </member>
        <member name="T:Rock.Address.IGeocodeServiceData">
            <summary>
            Metadata interface used by the MEF import/export signatures
            </summary>
        </member>
        <member name="P:Rock.Address.IGeocodeServiceData.ServiceName">
            <summary>
            The name of the service
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.UserService">
            <summary>
            REST WCF service for Users
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IUserService">
            <summary>
            Represents a REST WCF service for Users
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IUserService.Get(System.String)">
            <summary>
            Gets a User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IUserService.UpdateUser(System.String,Rock.Models.Cms.User)">
            <summary>
            Updates a User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IUserService.CreateUser(Rock.Models.Cms.User)">
            <summary>
            Creates a new User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IUserService.DeleteUser(System.String)">
            <summary>
            Deletes a User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.UserService.Get(System.String)">
            <summary>
            Gets a User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.UserService.UpdateUser(System.String,Rock.Models.Cms.User)">
            <summary>
            Updates a User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.UserService.CreateUser(Rock.Models.Cms.User)">
            <summary>
            Creates a new User object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.UserService.DeleteUser(System.String)">
            <summary>
            Deletes a User object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.SiteService">
            <summary>
            REST WCF service for Sites
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.ISiteService">
            <summary>
            Represents a REST WCF service for Sites
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteService.Get(System.String)">
            <summary>
            Gets a Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteService.UpdateSite(System.String,Rock.Models.Cms.Site)">
            <summary>
            Updates a Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteService.CreateSite(Rock.Models.Cms.Site)">
            <summary>
            Creates a new Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.ISiteService.DeleteSite(System.String)">
            <summary>
            Deletes a Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteService.Get(System.String)">
            <summary>
            Gets a Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteService.UpdateSite(System.String,Rock.Models.Cms.Site)">
            <summary>
            Updates a Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteService.CreateSite(Rock.Models.Cms.Site)">
            <summary>
            Creates a new Site object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteService.DeleteSite(System.String)">
            <summary>
            Deletes a Site object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.PageRouteService">
            <summary>
            REST WCF service for PageRoutes
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageRouteService.Get(System.String)">
            <summary>
            Gets a PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageRouteService.UpdatePageRoute(System.String,Rock.Models.Cms.PageRoute)">
            <summary>
            Updates a PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageRouteService.CreatePageRoute(Rock.Models.Cms.PageRoute)">
            <summary>
            Creates a new PageRoute object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.PageRouteService.DeletePageRoute(System.String)">
            <summary>
            Deletes a PageRoute object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlogPostCommentService">
            <summary>
            REST WCF service for BlogPostComments
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlogPostCommentService">
            <summary>
            Represents a REST WCF service for BlogPostComments
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostCommentService.Get(System.String)">
            <summary>
            Gets a BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostCommentService.UpdateBlogPostComment(System.String,Rock.Models.Cms.BlogPostComment)">
            <summary>
            Updates a BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostCommentService.CreateBlogPostComment(Rock.Models.Cms.BlogPostComment)">
            <summary>
            Creates a new BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogPostCommentService.DeleteBlogPostComment(System.String)">
            <summary>
            Deletes a BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostCommentService.Get(System.String)">
            <summary>
            Gets a BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostCommentService.UpdateBlogPostComment(System.String,Rock.Models.Cms.BlogPostComment)">
            <summary>
            Updates a BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostCommentService.CreateBlogPostComment(Rock.Models.Cms.BlogPostComment)">
            <summary>
            Creates a new BlogPostComment object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostCommentService.DeleteBlogPostComment(System.String)">
            <summary>
            Deletes a BlogPostComment object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlogCategoryService">
            <summary>
            REST WCF service for BlogCategories
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlogCategoryService">
            <summary>
            Represents a REST WCF service for BlogCategories
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogCategoryService.Get(System.String)">
            <summary>
            Gets a BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogCategoryService.UpdateBlogCategory(System.String,Rock.Models.Cms.BlogCategory)">
            <summary>
            Updates a BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogCategoryService.CreateBlogCategory(Rock.Models.Cms.BlogCategory)">
            <summary>
            Creates a new BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogCategoryService.DeleteBlogCategory(System.String)">
            <summary>
            Deletes a BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogCategoryService.Get(System.String)">
            <summary>
            Gets a BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogCategoryService.UpdateBlogCategory(System.String,Rock.Models.Cms.BlogCategory)">
            <summary>
            Updates a BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogCategoryService.CreateBlogCategory(Rock.Models.Cms.BlogCategory)">
            <summary>
            Creates a new BlogCategory object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogCategoryService.DeleteBlogCategory(System.String)">
            <summary>
            Deletes a BlogCategory object
            </summary>
        </member>
        <member name="T:Rock.Services.Groups.GroupRoleService">
            <summary>
            Group Role POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Groups.GroupRoleService.GetByGuid(System.Guid)">
            <summary>
            Gets Group Roles by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of GroupRole objects.</returns>
        </member>
        <member name="M:Rock.Services.Groups.GroupRoleService.GetByOrder(System.Nullable{System.Int32})">
            <summary>
            Gets Group Roles by Order
            </summary>
            <param name="order">Order.</param>
            <returns>An enumerable list of GroupRole objects.</returns>
        </member>
        <member name="T:Rock.Repository.Groups.EntityGroupRoleRepository">
            <summary>
            Group Role POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IEntityChangeRepository">
            <summary>
            Represents a Entity Change POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityFieldTypeRepository">
            <summary>
            Field Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IFieldTypeRepository">
            <summary>
            Represents a Field Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityEntityChangeRepository">
            <summary>
            Entity Change POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlogTagRepository">
            <summary>
            Blog Tag POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IBlogTagRepository">
            <summary>
            Represents a Blog Tag POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.TrackChangesAttribute">
            <summary>
            Custom attribute used to decorate model properties that should be tracked.  Any changes to
            properties with this attribute will be logged in the coreEntityChange table
            </summary>
        </member>
        <member name="T:Rock.Helpers.Reflection">
            <summary>
            Static helper methods for using Reflection
            </summary>
        </member>
        <member name="M:Rock.Helpers.Reflection.FindTypes(System.Type)">
            <summary>
            Finds the all the types that implement or inherit from the baseType.  The baseType
            will not be included in the result
            </summary>
            <param name="baseType">base type.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Helpers.Reflection.FindTypes(System.Type,System.Boolean)">
            <summary>
            Finds the all the types that implement or inherit from the baseType.  
            </summary>
            <param name="baseType">base type.</param>
            <param name="includeBaseType">if set to <c>true</c> the base type will be included in the result</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Helpers.Reflection.ClassName(System.Type)">
            <summary>
            Returns the name of the type.  If a <see cref="T:System.ComponentModel.DescriptionAttribute"/> is 
            present for the type, it's value will be returned, otherwise the type name will be returned
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.ExtensionMethods">
            <summary>
            Extension Methods
            </summary>
        </member>
        <member name="M:Rock.ExtensionMethods.SplitCase(System.String)">
            <summary>
            Splits a Camel or Pascal cased identifier into seperate words.
            </summary>
            <param name="str">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.PersonId(System.Web.Security.MembershipUser)">
            <summary>
            Returns the PersonId associated with the <see cref="T:System.Web.Security.MembershipUser"/> object
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Api.Cms.BlockInstanceService">
            <summary>
            REST WCF service for BlockInstances
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlockInstanceService">
            <summary>
            Represents a REST WCF service for BlockInstances
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockInstanceService.Get(System.String)">
            <summary>
            Gets a BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockInstanceService.UpdateBlockInstance(System.String,Rock.Models.Cms.BlockInstance)">
            <summary>
            Updates a BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockInstanceService.CreateBlockInstance(Rock.Models.Cms.BlockInstance)">
            <summary>
            Creates a new BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlockInstanceService.DeleteBlockInstance(System.String)">
            <summary>
            Deletes a BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockInstanceService.Get(System.String)">
            <summary>
            Gets a BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockInstanceService.UpdateBlockInstance(System.String,Rock.Models.Cms.BlockInstance)">
            <summary>
            Updates a BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockInstanceService.CreateBlockInstance(Rock.Models.Cms.BlockInstance)">
            <summary>
            Creates a new BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlockInstanceService.DeleteBlockInstance(System.String)">
            <summary>
            Deletes a BlockInstance object
            </summary>
        </member>
        <member name="T:Rock.Address.Standardize.StrikeIron">
            <summary>
            The USAddressVerification service from <a href="http://www.strikeiron.com/Home.aspx">StrikeIron</a>
            </summary>
        </member>
        <member name="M:Rock.Address.Standardize.StrikeIron.Standardize(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Standardizes the specified address.
            </summary>
            <remarks>
            The StrikeIron address verification will also attempt to geocode the address.  If this 
            geocode is succesful, the Geocode information of the address will be updated also.
            </remarks>
            <param name="address">The address.</param>
            <param name="result">The result.</param>
            <returns>
            True/False value of whether the address was standardized was succesfully
            </returns>
        </member>
        <member name="T:Rock.Services.Util.JobService">
            <summary>
            Job POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Util.JobService.GetByGuid(System.Guid)">
            <summary>
            Gets Jobs by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Job objects.</returns>
        </member>
        <member name="M:Rock.Services.Util.JobService.GetActiveJobs">
            <summary>
            Gets the active jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Util.JobService.BuildQuartzJob(Rock.Models.Util.Job)">
            <summary>
            Builds the quartz job.
            </summary>
            <param name="job">The job.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Util.JobService.BuildQuartzTrigger(Rock.Models.Util.Job)">
            <summary>
            Builds the quartz trigger.
            </summary>
            <param name="job">The job.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Services.Crm.PersonService">
            <summary>
            Person POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Crm.PersonService.GetByFullName(System.String)">
            <summary>
            Gets a list of people with a matching full name
            </summary>
            <param name="fullName">The full name.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Crm.PersonService.GetByGuid(System.Guid)">
            <summary>
            Gets Person by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Person object.</returns>
        </member>
        <member name="T:Rock.Services.Cms.BlockService">
            <summary>
            Block POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.BlockService.GetUnregisteredBlocks(System.String)">
            <summary>
            Gets a list of Blocks on the filesystem that have not yet been registered in the repository.
            </summary>
            <param name="physWebAppPath">the physical path of the web application</param>
            <returns>a collection of <see cref="T:Rock.Models.Cms.Block">Blocks</see> that are not yet registered</returns>
        </member>
        <member name="M:Rock.Services.Cms.BlockService.GetByGuid(System.Guid)">
            <summary>
            Gets Blocks by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Block objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.BlockService.GetByName(System.String)">
            <summary>
            Gets Blocks by Name
            </summary>
            <param name="name">Name.</param>
            <returns>An enumerable list of Block objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.BlockService.GetByPath(System.String)">
            <summary>
            Gets Blocks by Path
            </summary>
            <param name="path">Path.</param>
            <returns>An enumerable list of Block objects.</returns>
        </member>
        <member name="T:Rock.Repository.Crm.EntityAddressRepository">
            <summary>
            Address POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.IFileRepository">
            <summary>
            Represents a File POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Core.AttributeQualifier">
            <summary>
            Attribute Qualifier POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.AttributeId">
            <summary>
            Gets or sets the Attribute Id.
            </summary>
            <value>
            Attribute Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.Key">
            <summary>
            Gets or sets the Key.
            </summary>
            <value>
            Key.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.Attribute">
            <summary>
            Gets or sets the Attribute.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Core.AttributeQualifier.Attribute"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.AttributeQualifier.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Core.AttributeQualifierConfiguration">
            <summary>
            Attribute Qualifier Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.AttributeQualifierConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.AttributeQualifierConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.SiteDomain">
            <summary>
            Site Domain POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.Domain">
            <summary>
            Gets or sets the Domain.
            </summary>
            <value>
            Domain.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.Site">
            <summary>
            Gets or sets the Site.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.SiteDomain.Site"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.SiteDomain.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.SiteDomainConfiguration">
            <summary>
            Site Domain Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.SiteDomainConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.SiteDomainConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.BlockInstance">
            <summary>
            Block Instance POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlockInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.SupportedActions">
            <summary>
            Gets the supported actions.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Layout">
            <summary>
            Gets or sets the Layout.
            </summary>
            <value>
            Layout.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.BlockId">
            <summary>
            Gets or sets the Block Id.
            </summary>
            <value>
            Block Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Zone">
            <summary>
            Gets or sets the Zone.
            </summary>
            <value>
            Zone.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.OutputCacheDuration">
            <summary>
            Gets or sets the Output Cache Duration.
            </summary>
            <value>
            Output Cache Duration.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.HtmlContents">
            <summary>
            Gets or sets the Html Contents.
            </summary>
            <value>
            Collection of Html Contents.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Block">
            <summary>
            Gets or sets the Block.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.BlockInstance.Block"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.Page">
            <summary>
            Gets or sets the Page.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.BlockInstance.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlockInstance.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Cms.Security.User">
            <summary>
            Rock's Membership Provider
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.User.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
              
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
              
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"/> on a provider after the provider has already been initialized.</exception>
        </member>
        <member name="M:Rock.Cms.Security.User.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password for a membership user.
            </summary>
            <param name="username">The user to update the password for.</param>
            <param name="oldPassword">The current password for the specified user.</param>
            <param name="newPassword">The new password for the specified user.</param>
            <returns>
            true if the password was updated successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            Processes a request to update the password question and answer for a membership user.
            </summary>
            <param name="username">The user to change the password question and answer for.</param>
            <param name="password">The password for the specified user.</param>
            <param name="newPasswordQuestion">The new password question for the specified user.</param>
            <param name="newPasswordAnswer">The new password answer for the specified user.</param>
            <returns>
            true if the password question and answer are updated successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new membership user to the data source.
            </summary>
            <param name="username">The user name for the new user.</param>
            <param name="password">The password for the new user.</param>
            <param name="email">The e-mail address for the new user.</param>
            <param name="passwordQuestion">The password question for the new user.</param>
            <param name="passwordAnswer">The password answer for the new user</param>
            <param name="isApproved">Whether or not the new user is approved to be validated.</param>
            <param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
            <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus"/> enumeration value indicating whether the user was created successfully.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"/> object populated with the information for the newly created user.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.DeleteUser(System.String,System.Boolean)">
            <summary>
            Removes a user from the membership data source.
            </summary>
            <param name="username">The name of the user to delete.</param>
            <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
            <returns>
            true if the user was successfully deleted; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
            </summary>
            <param name="emailToMatch">The e-mail address to search for.</param>
            <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex"/> is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"/> collection that contains a page of <paramref name="pageSize"/><see cref="T:System.Web.Security.MembershipUser"/> objects beginning at the page specified by <paramref name="pageIndex"/>.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the user name contains the specified user name to match.
            </summary>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex"/> is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"/> collection that contains a page of <paramref name="pageSize"/><see cref="T:System.Web.Security.MembershipUser"/> objects beginning at the page specified by <paramref name="pageIndex"/>.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of all the users in the data source in pages of data.
            </summary>
            <param name="pageIndex">The index of the page of results to return. <paramref name="pageIndex"/> is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"/> collection that contains a page of <paramref name="pageSize"/><see cref="T:System.Web.Security.MembershipUser"/> objects beginning at the page specified by <paramref name="pageIndex"/>.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetNumberOfUsersOnline">
            <summary>
            Gets the number of users currently accessing the application.
            </summary>
            <returns>
            The number of users currently accessing the application.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetPassword(System.String,System.String)">
            <summary>
            Gets the password for the specified user name from the data source.
            </summary>
            <param name="username">The user to retrieve the password for.</param>
            <param name="answer">The password answer for the user.</param>
            <returns>
            The password for the specified user name.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUser(System.String,System.Boolean)">
            <summary>
            Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <param name="username">The name of the user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"/> object populated with the specified user's information from the data source.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"/> object populated with the specified user's information from the data source.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUser(Rock.Services.Cms.UserService,System.String,System.Boolean)">
            <summary>
            Gets the user.
            </summary>
            <param name="UserService">The user service.</param>
            <param name="username">The username.</param>
            <param name="userIsOnline">if set to <c>true</c> [user is online].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUser(Rock.Services.Cms.UserService,Rock.Models.Cms.User,System.Boolean)">
            <summary>
            Gets the user.
            </summary>
            <param name="UserService">The user service.</param>
            <param name="user">The user.</param>
            <param name="userIsOnline">if set to <c>true</c> [user is online].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUserFromModel(Rock.Models.Cms.User)">
            <summary>
            Gets the user from model.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUserNameByEmail(System.String)">
            <summary>
            Gets the user name associated with the specified e-mail address.
            </summary>
            <param name="email">The e-mail address to search for.</param>
            <returns>
            The user name associated with the specified e-mail address. If no match is found, return null.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.GetUserNameByEmail(Rock.Services.Cms.UserService,System.String)">
            <summary>
            Gets the user name by email.
            </summary>
            <param name="UserService">The user service.</param>
            <param name="email">The email.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.User.ResetPassword(System.String,System.String)">
            <summary>
            Resets a user's password to a new, automatically generated password.
            </summary>
            <param name="username">The user to reset the password for.</param>
            <param name="answer">The password answer for the specified user.</param>
            <returns>
            The new password for the specified user.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.UnlockUser(System.String)">
            <summary>
            Clears a lock so that the membership user can be validated.
            </summary>
            <param name="userName">The membership user whose lock status you want to clear.</param>
            <returns>
            true if the membership user was successfully unlocked; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the data source.
            </summary>
            <param name="user">A <see cref="T:System.Web.Security.MembershipUser"/> object that represents the user to update and the updated information for the user.</param>
        </member>
        <member name="M:Rock.Cms.Security.User.ValidateUser(System.String,System.String)">
            <summary>
            Verifies that the specified user name and password exist in the data source.
            </summary>
            <param name="username">The name of the user to validate.</param>
            <param name="password">The password for the specified user.</param>
            <returns>
            true if the specified username and password are valid; otherwise, false.
            </returns>
        </member>
        <member name="M:Rock.Cms.Security.User.ValidateUser(Rock.Services.Cms.UserService,Rock.Models.Cms.User,System.String)">
            <summary>
            Validates the user.
            </summary>
            <param name="UserService">The user service.</param>
            <param name="user">The user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Cms.Security.User.ApplicationName">
            <summary>
            The name of the application using the custom membership provider.
            </summary>
            <returns>The name of the application using the custom membership provider.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.MaxInvalidPasswordAttempts">
            <summary>
            Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
            </summary>
            <returns>The number of invalid password or password-answer attempts allowed before the membership user is locked out.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets the minimum number of special characters that must be present in a valid password.
            </summary>
            <returns>The minimum number of special characters that must be present in a valid password.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.MinRequiredPasswordLength">
            <summary>
            Gets the minimum length required for a password.
            </summary>
            <returns>The minimum length required for a password. </returns>
        </member>
        <member name="P:Rock.Cms.Security.User.PasswordAttemptWindow">
            <summary>
            Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
            </summary>
            <returns>The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.PasswordFormat">
            <summary>
            Gets a value indicating the format for storing passwords in the membership data store.
            </summary>
            <returns>One of the <see cref="T:System.Web.Security.MembershipPasswordFormat"/> values indicating the format for storing passwords in the data store.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.PasswordStrengthRegularExpression">
            <summary>
            Gets the regular expression used to evaluate a password.
            </summary>
            <returns>A regular expression used to evaluate a password.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.
            </summary>
            <returns>true if a password answer is required for password reset and retrieval; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.
            </summary>
            <returns>true if the membership provider requires a unique e-mail address; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.EnablePasswordReset">
            <summary>
            Indicates whether the membership provider is configured to allow users to reset their passwords.
            </summary>
            <returns>true if the membership provider supports password reset; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Rock.Cms.Security.User.EnablePasswordRetrieval">
            <summary>
            Indicates whether the membership provider is configured to allow users to retrieve their passwords.
            </summary>
            <returns>true if the membership provider is configured to support password retrieval; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:Rock.Cms.Security.User.AuthenticationType">
            <summary>
            How user is authenticated
            </summary>
        </member>
        <member name="F:Rock.Cms.Security.User.AuthenticationType.Database">
            <summary>
            Athenticate login against Rock database
            </summary>
        </member>
        <member name="F:Rock.Cms.Security.User.AuthenticationType.Facebook">
            <summary>
            Authenticate using Facebook
            </summary>
        </member>
        <member name="F:Rock.Cms.Security.User.AuthenticationType.ActiveDirectory">
            <summary>
            Authenticate using Active Directory
            </summary>
        </member>
        <member name="T:Rock.Cms.Security.Authorization">
            <summary>
            Static class for managing authorizations
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.Load">
            <summary>
            Load the static Authorizations object
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.ReloadAction(System.String,System.Int32,System.String)">
            <summary>
            Reloads the authorizations for the specified entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.Flush">
            <summary>
            Clear the static Authorizations object
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.Authorized(Rock.Cms.Security.ISecured,System.String,System.Web.Security.MembershipUser)">
            <summary>
            Evaluates whether a selected user is allowed to perform the selected action on the selected
            entity.
            </summary>
            <param name="entity"></param>
            <param name="action"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.AuthRules(System.String,System.Int32,System.String)">
            <summary>
            Returns the authorization rules for the specified entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.EncodeEntityTypeName(System.Type)">
            <summary>
            Encodes the entity type name for use in a URL
            </summary>
            <param name="iSecuredType">Type of the i secured.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.DecodeEntityTypeName(System.String)">
            <summary>
            Decodes the entity type name.
            </summary>
            <param name="encodedTypeName">Name of the encoded type.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Authorization.CopyAuthorization(Rock.Cms.Security.ISecured,Rock.Cms.Security.ISecured,System.Nullable{System.Int32})">
            <summary>
            Copies the authorizations from one <see cref="T:Rock.Cms.Security.ISecured"/> object to another
            </summary>
            <param name="sourceEntity">The source entity.</param>
            <param name="targetEntity">The target entity.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Cms.Security.Authorization.Authorizations">
            <summary>
            Authorizations is a static variable for storing all authorizations.  It uses multiple Dictionary objects similiar 
            to a multi-dimensional array to store information.  The first dimension is the entity type, second is the entity
            ID, third is the action, and the fourth dimension is a list of AuthRules for the action.
            </summary>
        </member>
        <member name="T:Rock.Cms.Security.AuthRule">
            <summary>
            Lightweight class to store if a particular user or role is allowed or denied access
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.AuthRule.#ctor(System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Cms.Security.AuthRule"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="allowOrDeny">Allow or Deny ("A" or "D").</param>
            <param name="userOrRole">User or Role ("U" or "R").</param>
            <param name="userOrRoleName">Name of the user or role.</param>
            <param name="order">The order.</param>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.AllowOrDeny">
            <summary>
            Gets or sets a value indicating if this is an allow or deny rule.  Acceptable values are "A" or "D".
            </summary>
            <value>
            The allow or deny.
            </value>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.UserOrRole">
            <summary>
            Gets or sets a value indicating if this is for a User or a Role.  Acceptable values are "U" or "R"
            </summary>
            <value>
            The user or role.
            </value>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.UserOrRoleName">
            <summary>
            Gets or sets the name of the user or role.
            </summary>
            <value>
            The name of the user or role.
            </value>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Cms.Security.AuthRule.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="T:Rock.Cms.Cached.Site">
            <summary>
            Information about a site that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Site.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Site object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Site.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Cms.Cached.Site.Read(System.Int32)">
            <summary>
            Returns Site object from cache.  If site does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Site.Flush(System.Int32)">
            <summary>
            Removes site from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Cms.Cached.Site.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.OrgId">
            <summary>
            Gets the org id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.Theme">
            <summary>
            Gets the theme.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.FaviconUrl">
            <summary>
            Gets the favicon URL.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.AppleTouchUrl">
            <summary>
            Gets the apple touch URL.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.AttributeValues">
            <summary>
            Gets the attribute values.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.FacebookAppId">
            <summary>
            Gets the facebook app id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.FacebookAppSecret">
            <summary>
            Gets the facebook app secret.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.Attributes">
            <summary>
            Gets a list of attributes associated with the site.  This object will not include values.
            To get values associated with the current site instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Site.DefaultPage">
            <summary>
            Gets the default page.
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IFieldTypeService">
            <summary>
            Represents a REST WCF service for FieldTypes
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IFieldTypeService.Get(System.String)">
            <summary>
            Gets a FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IFieldTypeService.UpdateFieldType(System.String,Rock.Models.Core.FieldType)">
            <summary>
            Updates a FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IFieldTypeService.CreateFieldType(Rock.Models.Core.FieldType)">
            <summary>
            Creates a new FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IFieldTypeService.DeleteFieldType(System.String)">
            <summary>
            Deletes a FieldType object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.FieldTypeService">
            <summary>
            REST WCF service for FieldTypes
            </summary>
        </member>
        <member name="M:Rock.Api.Core.FieldTypeService.Get(System.String)">
            <summary>
            Gets a FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.FieldTypeService.UpdateFieldType(System.String,Rock.Models.Core.FieldType)">
            <summary>
            Updates a FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.FieldTypeService.CreateFieldType(Rock.Models.Core.FieldType)">
            <summary>
            Creates a new FieldType object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.FieldTypeService.DeleteFieldType(System.String)">
            <summary>
            Deletes a FieldType object
            </summary>
        </member>
        <member name="T:Rock.Api.IServiceData">
            <summary>
            Interface used for the MEF metadata of all WCF REST Api services
            </summary>
        </member>
        <member name="P:Rock.Api.IServiceData.RouteName">
            <summary>
            The name of the route
            </summary>
        </member>
        <member name="T:Rock.Address.ServiceDescription">
            <summary>
            Helper class for wrapping the properties of a MEF class to use in databinding
            </summary>
        </member>
        <member name="M:Rock.Address.ServiceDescription.#ctor(System.Int32,Rock.Attribute.IHasAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Address.ServiceDescription"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="service">The service.</param>
        </member>
        <member name="P:Rock.Address.ServiceDescription.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Address.ServiceDescription.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Address.ServiceDescription.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Address.ServiceDescription.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Address.ServiceDescription"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Services.Cms.BlockInstanceService">
            <summary>
            Block Instance POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.BlockInstanceService.GetByLayout(System.String)">
            <summary>
            Gets Block Instances by Layout
            </summary>
            <param name="layout">Layout.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.BlockInstanceService.GetByPageId(System.Nullable{System.Int32})">
            <summary>
            Gets Block Instances by Page Id
            </summary>
            <param name="pageId">Page Id.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.BlockInstanceService.GetByLayoutAndPageIdAndZone(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets Block Instances by Layout And Page Id And Zone
            </summary>
            <param name="layout">Layout.</param>
            <param name="pageId">Page Id.</param>
            <param name="zone">Zone.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="T:Rock.Repository.Crm.EntityPhoneNumberRepository">
            <summary>
            Phone Number POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.IAttributeValueRepository">
            <summary>
            Represents a Attribute Value POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityHtmlContentRepository">
            <summary>
            Html Content POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityBlogCategoryRepository">
            <summary>
            Blog Category POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Util.Job">
            <summary>
            Job POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Util.Job.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.Active">
            <summary>
            Gets or sets the Active.
            </summary>
            <value>
            Active.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.Assemby">
            <summary>
            Gets or sets the Assemby.
            </summary>
            <value>
            Assemby.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.Class">
            <summary>
            Gets or sets the Class.
            </summary>
            <value>
            Class.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.CronExpression">
            <summary>
            Gets or sets the Cron Expression.
            </summary>
            <value>
            Cron Expression.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.LastSuccessfulRun">
            <summary>
            Gets or sets the Last Successful Run.
            </summary>
            <value>
            Last Successful Run.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.LastRunDate">
            <summary>
            Gets or sets the Last Run Date.
            </summary>
            <value>
            Last Run Date.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.LastRunDuration">
            <summary>
            Gets or sets the Last Run Duration.
            </summary>
            <value>
            Number of seconds that the last job took to finish..
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.LastStatus">
            <summary>
            Gets or sets the Last Status.
            </summary>
            <value>
            Last Status.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.LastStatusMessage">
            <summary>
            Gets or sets the Last Status Message.
            </summary>
            <value>
            Last Status Message.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.NotificationEmails">
            <summary>
            Gets or sets the Notification Emails.
            </summary>
            <value>
            Notification Emails.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.NotificationStatusInternal">
            <summary>
            Gets or sets the Notification Status.
            </summary>
            <value>
            Valid valids = All = 1, Success = 2, Error = 3, None = 4  Enum[JobNotificationStatus].
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.NotificationStatus">
            <summary>
            Gets or sets the Notification Status.
            </summary>
            <value>
            Valid valids = All = 1, Success = 2, Error = 3, None = 4  Enum[JobNotificationStatus].
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.CreateByPersonId">
            <summary>
            Gets or sets the Create By Person Id.
            </summary>
            <value>
            Create By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Util.Job.CreateByPerson">
            <summary>
            Gets or sets the Create By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Util.Job.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Util.Job.JobNotificationStatus">
            <summary>
            Job notification status
            </summary>
        </member>
        <member name="F:Rock.Models.Util.Job.JobNotificationStatus.All">
            <summary>
            Notify on all status
            </summary>
        </member>
        <member name="F:Rock.Models.Util.Job.JobNotificationStatus.Success">
            <summary>
            Notify when successful
            </summary>
            
        </member>
        <member name="F:Rock.Models.Util.Job.JobNotificationStatus.Error">
            <summary>
            Notify when an error occurs
            </summary>
        </member>
        <member name="F:Rock.Models.Util.Job.JobNotificationStatus.None">
            <summary>
            Notify when a warning occurs
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.Page">
            <summary>
            Page POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.Page.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.Models.Cms.Page.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            Title.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.ParentPageId">
            <summary>
            Gets or sets the Parent Page Id.
            </summary>
            <value>
            Parent Page Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Layout">
            <summary>
            Gets or sets the Layout.
            </summary>
            <value>
            Layout.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.RequiresEncryption">
            <summary>
            Gets or sets the Requires Encryption.
            </summary>
            <value>
            Requires Encryption.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.EnableViewState">
            <summary>
            Gets or sets the Enable View State.
            </summary>
            <value>
            Enable View State.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.MenuDisplayDescription">
            <summary>
            Gets or sets the Menu Display Description.
            </summary>
            <value>
            Menu Display Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.MenuDisplayIcon">
            <summary>
            Gets or sets the Menu Display Icon.
            </summary>
            <value>
            Menu Display Icon.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.MenuDisplayChildPages">
            <summary>
            Gets or sets the Menu Display Child Pages.
            </summary>
            <value>
            Menu Display Child Pages.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.DisplayInNavWhenInternal">
            <summary>
            Gets or sets the Display In Nav When.
            </summary>
            <value>
            Determines when to display in a navigation 
            0 = When Security Allows
            1 = Always
            3 = Never   
            
            Enum[DisplayInNavWhen].
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.DisplayInNavWhen">
            <summary>
            Gets or sets the Display In Nav When.
            </summary>
            <value>
            Determines when to display in a navigation 
            0 = When Security Allows
            1 = Always
            3 = Never   
            
            Enum[DisplayInNavWhen].
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.OutputCacheDuration">
            <summary>
            Gets or sets the Output Cache Duration.
            </summary>
            <value>
            Output Cache Duration.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.IncludeAdminFooter">
            <summary>
            Gets or sets the Include Admin Footer.
            </summary>
            <value>
            Include Admin Footer.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.IconUrl">
            <summary>
            Gets or sets the Icon Url.
            </summary>
            <value>
            Icon Url.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Page.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            Collection of Block Instances.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            Collection of Pages.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.PageRoutes">
            <summary>
            Gets or sets the Page Routes.
            </summary>
            <value>
            Collection of Page Routes.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Sites">
            <summary>
            Gets or sets the Sites.
            </summary>
            <value>
            Collection of Sites.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.ParentPage">
            <summary>
            Gets or sets the Parent Page.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Cms.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.Site">
            <summary>
            Gets or sets the Site.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.Page.Site"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Page.SupportedActions">
            <summary>
            Gets the supported actions.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.PageConfiguration">
            <summary>
            Page Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.PageConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.PageConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Controls.Grid">
            <summary>
            Rock Grid Control
            </summary>
        </member>
        <member name="M:Rock.Controls.Grid.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnDataBound(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.WebControls.BaseDataBoundControl.DataBound"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.gridPagerTemplate_PageClick(System.Object,System.EventArgs)">
            <summary>
            Handles the PageClick event of the gridPagerTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.gridPagerTemplate_AddClick(System.Object,System.EventArgs)">
            <summary>
            Handles the AddClick event of the gridPagerTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Raises the appropriate events for the <see cref="T:System.Web.UI.WebControls.GridView"/> control when it posts back to the server.
            </summary>
            <param name="eventArgument">The event argument from which to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> for the event or events that are raised.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnGridReorder(Rock.Controls.GridReorderEventArgs)">
            <summary>
            Raises the <see cref="E:GridReorder"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Controls.GridReorderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnGridAdd(System.EventArgs)">
            <summary>
            Raises the <see cref="E:GridAdd"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.Grid.OnGridRebind(System.EventArgs)">
            <summary>
            Raises the <see cref="E:GridRebind"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Rock.Controls.Grid.EnableClientSorting">
            <summary>
            Gets or sets a value indicating whether client-side sorting should be enabled.
            </summary>
            <value>
              <c>true</c> if client-sid sorting should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Controls.Grid.EnableAdd">
            <summary>
            Gets or sets a value indicating whether adding should be enabled.
            </summary>
            <value>
              <c>true</c> if adding is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Controls.Grid.ClientAddScript">
            <summary>
            Gets or sets the client script to be called when user clicks tha add icon
            </summary>
            <value>
            The client add script.
            </value>
        </member>
        <member name="E:Rock.Controls.Grid.GridReorder">
            <summary>
            Occurs when [grid reorder].
            </summary>
        </member>
        <member name="E:Rock.Controls.Grid.GridAdd">
            <summary>
            Occurs when [grid add].
            </summary>
        </member>
        <member name="E:Rock.Controls.Grid.GridRebind">
            <summary>
            Occurs when [grid rebind].
            </summary>
        </member>
        <member name="T:Rock.Controls.GridReorderEventHandler">
            <summary>
            Delegate used for raising the grid reorder event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Rock.Controls.GridReorderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Controls.GridAddEventHandler">
            <summary>
            Delegate used for raising the grid add event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Controls.GridRebindEventHandler">
            <summary>
            Delegate used for raising the grid rebind event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Controls.GridReorderEventArgs">
            <summary>
            Grid Reorder Event Argument
            </summary>
        </member>
        <member name="M:Rock.Controls.GridReorderEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Controls.GridReorderEventArgs"/> class.
            </summary>
            <param name="dataKey">The data key.</param>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="P:Rock.Controls.GridReorderEventArgs.DataKey">
            <summary>
            Gets the data key.
            </summary>
        </member>
        <member name="P:Rock.Controls.GridReorderEventArgs.OldIndex">
            <summary>
            Gets the old index.
            </summary>
        </member>
        <member name="P:Rock.Controls.GridReorderEventArgs.NewIndex">
            <summary>
            Gets the new index.
            </summary>
        </member>
        <member name="P:Rock.Controls.GridReorderEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the reorder event should be cancelled
            </summary>
            <value>
              <c>true</c> if cancelled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Controls.JsonResult">
            <summary>
            JSON Result  
            </summary>
        </member>
        <member name="T:Rock.Controls.EmptyDataTemplate">
            <summary>
            Template used for an empty data row in the <see cref="T:Rock.Controls.Grid"/> control
            </summary>
        </member>
        <member name="M:Rock.Controls.EmptyDataTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="T:Rock.Controls.PagerTemplate">
            <summary>
            Template used for the pager row in the <see cref="T:Rock.Controls.Grid"/> control
            </summary>
        </member>
        <member name="M:Rock.Controls.PagerTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Controls.PagerTemplate.ddl_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the SelectedIndexChanged event of the ddl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.PagerTemplate.lbAdd_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbAdd control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Controls.PagerTemplate.PageClick">
            <summary>
            Occurs when [page click].
            </summary>
        </member>
        <member name="E:Rock.Controls.PagerTemplate.AddClick">
            <summary>
            Occurs when [add click].
            </summary>
        </member>
        <member name="T:Rock.Api.Core.DefinedValueService">
            <summary>
            REST WCF service for DefinedValues
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedValueService.Get(System.String)">
            <summary>
            Gets a DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedValueService.UpdateDefinedValue(System.String,Rock.Models.Core.DefinedValue)">
            <summary>
            Updates a DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedValueService.CreateDefinedValue(Rock.Models.Core.DefinedValue)">
            <summary>
            Creates a new DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.DefinedValueService.DeleteDefinedValue(System.String)">
            <summary>
            Deletes a DefinedValue object
            </summary>
        </member>
        <member name="T:Rock.Address.StandardizeContainer">
            <summary>
            Singleton class that uses MEF to load and cache all of the StandardizeService classes
            </summary>
        </member>
        <member name="M:Rock.Address.StandardizeContainer.Refresh">
            <summary>
            Forces a reloading of all the StandardizeService classes
            </summary>
        </member>
        <member name="P:Rock.Address.StandardizeContainer.Services">
            <summary>
            Gets the services.
            </summary>
        </member>
        <member name="P:Rock.Address.StandardizeContainer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.FileService">
            <summary>
            REST WCF service for Files
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.FileService.Get(System.String)">
            <summary>
            Gets a File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.FileService.UpdateFile(System.String,Rock.Models.Cms.File)">
            <summary>
            Updates a File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.FileService.CreateFile(Rock.Models.Cms.File)">
            <summary>
            Creates a new File object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.FileService.DeleteFile(System.String)">
            <summary>
            Deletes a File object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlogService">
            <summary>
            REST WCF service for Blogs
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogService.Get(System.String)">
            <summary>
            Gets a Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogService.UpdateBlog(System.String,Rock.Models.Cms.Blog)">
            <summary>
            Updates a Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogService.CreateBlog(Rock.Models.Cms.Blog)">
            <summary>
            Creates a new Blog object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogService.DeleteBlog(System.String)">
            <summary>
            Deletes a Blog object
            </summary>
        </member>
        <member name="T:Rock.Services.Groups.GroupService">
            <summary>
            Group POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Groups.GroupService.GetByGuid(System.Guid)">
            <summary>
            Gets Group by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Group object.</returns>
        </member>
        <member name="M:Rock.Services.Groups.GroupService.GetByIsSecurityRole(System.Boolean)">
            <summary>
            Gets Groups by Is Security Role
            </summary>
            <param name="isSecurityRole">Is Security Role.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="M:Rock.Services.Groups.GroupService.GetByParentGroupIdAndName(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets Groups by Parent Group Id And Name
            </summary>
            <param name="parentGroupId">Parent Group Id.</param>
            <param name="name">Name.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="T:Rock.Services.Core.DefinedValueService">
            <summary>
            Defined Value POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Core.DefinedValueService.GetByDefinedTypeId(System.Int32)">
            <summary>
            Gets Defined Values by Defined Type Id
            </summary>
            <param name="definedTypeId">Defined Type Id.</param>
            <returns>An enumerable list of DefinedValue objects.</returns>
        </member>
        <member name="T:Rock.Services.Cms.PageService">
            <summary>
            Page POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.PageService.GetByGuid(System.Guid)">
            <summary>
            Gets Pages by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of Page objects.</returns>
        </member>
        <member name="M:Rock.Services.Cms.PageService.GetByParentPageId(System.Nullable{System.Int32})">
            <summary>
            Gets Pages by Parent Page Id
            </summary>
            <param name="parentPageId">Parent Page Id.</param>
            <returns>An enumerable list of Page objects.</returns>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.LicenseInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.LicenseInfo.UnregisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.LicenseInfo.RegisteredUser">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.UnregisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.UnregisteredUser.EmailAddress">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.ServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.ServiceInfoRecord.InfoKey">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.ServiceInfoRecord.InfoValue">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfServiceInfoRecord.Results">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsStatus.StatusNbr">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsStatus.StatusDescription">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfMethodStatusRecord.Results">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.MethodStatusRecord">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfSIWsStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfSIWsStatus.Results">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.MethodStatusRecord.MethodName">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultWithStatus.ItemStatus">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.USAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddressWithStatus.Address">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.USAddress">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.Address">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.StreetNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.Firm">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.PreDirection">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.StreetName">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.StreetType">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.PostDirection">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.Extension">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.ExtensionNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.Village">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Address.AddressStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.ZIPPlus4">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.ZIPCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.ZIPAddOn">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.CarrierRoute">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.PMB">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.PMBDesignator">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.DeliveryPoint">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.DPCheckDigit">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.LACS">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.CMRA">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.DPV">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.DPVFootnote">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.RDI">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.RecordType">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.CongressDistrict">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.County">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.CountyNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.StateNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USAddress.GeoCode">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.USGeocode">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.Geocode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Geocode.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.Geocode.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USGeocode.CensusTract">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USGeocode.StateNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USGeocode.CountyNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USGeocode.BlockNumber">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USGeocode.BlockGroup">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfUSAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsResultArrayOfUSAddressWithStatus.Results">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress.CityStateZIPCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress.Firm">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.USBatchAddress.Urbanization">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseStatusCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseActionCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseAction">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.RemainingHits">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SubscriptionInfo.Amount">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.RegisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.RegisteredUser.UserID">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.RegisteredUser.Password">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.StrikeIron.USAddressVerification.CasingEnum">
            <remarks/>
        </member>
        <member name="F:Rock.Framework.StrikeIron.USAddressVerification.CasingEnum.UPPER">
            <remarks/>
        </member>
        <member name="F:Rock.Framework.StrikeIron.USAddressVerification.CasingEnum.LOWER">
            <remarks/>
        </member>
        <member name="F:Rock.Framework.StrikeIron.USAddressVerification.CasingEnum.PROPER">
            <remarks/>
        </member>
        <member name="T:Rock.Repository.Groups.EntityGroupRepository">
            <summary>
            Group POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Groups.IGroupRepository">
            <summary>
            Represents a Group POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityServiceLogRepository">
            <summary>
            Service Log POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityDefinedTypeRepository">
            <summary>
            Defined Type POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Repository.Core.EntityAttributeValueRepository">
            <summary>
            Attribute Value POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Groups.GroupRole">
            <summary>
            Group Role POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.GroupTypes">
            <summary>
            Gets or sets the Group Types.
            </summary>
            <value>
            Collection of Group Types.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.GroupRole.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Groups.GroupRoleConfiguration">
            <summary>
            Group Role Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Groups.GroupRoleConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Groups.GroupRoleConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Groups.Group">
            <summary>
            Group POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.Group.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.ParentGroupId">
            <summary>
            Gets or sets the Parent Group Id.
            </summary>
            <value>
            Parent Group Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.GroupTypeId">
            <summary>
            Gets or sets the Group Type Id.
            </summary>
            <value>
            Group Type Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.IsSecurityRole">
            <summary>
            Gets or sets the Is Security Role.
            </summary>
            <value>
            Is Security Role.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Groups.Group.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            Collection of Groups.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.ParentGroup">
            <summary>
            Gets or sets the Parent Group.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Groups.Group"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Groups.Group.GroupType">
            <summary>
            Gets or sets the Group Type.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Groups.Group.GroupType"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Groups.GroupConfiguration">
            <summary>
            Group Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Groups.GroupConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Groups.GroupConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Core.EntityChange">
            <summary>
            Entity Change POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.ChangeSet">
            <summary>
            Gets or sets the Change Set.
            </summary>
            <value>
            Change Set.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.ChangeType">
            <summary>
            Gets or sets the Change Type.
            </summary>
            <value>
            Change Type.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.EntityType">
            <summary>
            Gets or sets the Entity Type.
            </summary>
            <value>
            Entity Type.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.Property">
            <summary>
            Gets or sets the Property.
            </summary>
            <value>
            Property.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.OriginalValue">
            <summary>
            Gets or sets the Original Value.
            </summary>
            <value>
            Original Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.CurrentValue">
            <summary>
            Gets or sets the Current Value.
            </summary>
            <value>
            Current Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.EntityChange.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Models.Core.EntityChangeConfiguration">
            <summary>
            Entity Change Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.EntityChangeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.EntityChangeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.DisplayInNavWhen">
            <summary>
            How should page be displayed in a page navigation block
            </summary>
        </member>
        <member name="F:Rock.Models.Cms.DisplayInNavWhen.WhenAllowed">
            <summary>
            Display this page in navigation controls when allowed by security
            </summary>
        </member>
        <member name="F:Rock.Models.Cms.DisplayInNavWhen.Always">
            <summary>
            Always display this page in navigation controls, regardless of security
            </summary>
        </member>
        <member name="F:Rock.Models.Cms.DisplayInNavWhen.Never">
            <summary>
            Never display this page in navigation controls
            </summary>
        </member>
        <member name="T:Rock.Jobs.JobPulse">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.JobPulse.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.JobPulse.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Helpers.HttpModule">
            <summary>
            Provides application start, and module initialization and disposal events to the implementing class.
            </summary>
        </member>
        <member name="M:Rock.Helpers.HttpModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="M:Rock.Helpers.HttpModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application</param>
        </member>
        <member name="M:Rock.Helpers.HttpModule.Application_Start(System.Web.HttpApplication)">
            <summary>
            Method that will be called once on application start.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Rock.Helpers.HtmlHelper">
            <summary>
            Provides helper methods for use in rendering HTML
            </summary>
        </member>
        <member name="M:Rock.Helpers.HtmlHelper.CssClassFormat(System.String)">
            <summary>
            Formats a string for use as a CCS class or id value
            </summary>
            <param name="value">String to format</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Helpers.HtmlHelper.CalculateMD5Hash(System.String)">
            <summary>
            Hashes a string using MD5
            </summary>
            <param name="input">String to format</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Api.Crm.PhoneNumberService">
            <summary>
            REST WCF service for PhoneNumbers
            </summary>
        </member>
        <member name="T:Rock.Api.Crm.IPhoneNumberService">
            <summary>
            Represents a REST WCF service for PhoneNumbers
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPhoneNumberService.Get(System.String)">
            <summary>
            Gets a PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPhoneNumberService.UpdatePhoneNumber(System.String,Rock.Models.Crm.PhoneNumber)">
            <summary>
            Updates a PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPhoneNumberService.CreatePhoneNumber(Rock.Models.Crm.PhoneNumber)">
            <summary>
            Creates a new PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.IPhoneNumberService.DeletePhoneNumber(System.String)">
            <summary>
            Deletes a PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PhoneNumberService.Get(System.String)">
            <summary>
            Gets a PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PhoneNumberService.UpdatePhoneNumber(System.String,Rock.Models.Crm.PhoneNumber)">
            <summary>
            Updates a PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PhoneNumberService.CreatePhoneNumber(Rock.Models.Crm.PhoneNumber)">
            <summary>
            Creates a new PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.Api.Crm.PhoneNumberService.DeletePhoneNumber(System.String)">
            <summary>
            Deletes a PhoneNumber object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IAttributeValueService">
            <summary>
            Represents a REST WCF service for AttributeValues
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeValueService.Get(System.String)">
            <summary>
            Gets a AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeValueService.UpdateAttributeValue(System.String,Rock.Models.Core.AttributeValue)">
            <summary>
            Updates a AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeValueService.CreateAttributeValue(Rock.Models.Core.AttributeValue)">
            <summary>
            Creates a new AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeValueService.DeleteAttributeValue(System.String)">
            <summary>
            Deletes a AttributeValue object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.IAttributeService">
            <summary>
            Represents a REST WCF service for Attributes
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeService.Get(System.String)">
            <summary>
            Gets a Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeService.UpdateAttribute(System.String,Rock.Models.Core.Attribute)">
            <summary>
            Updates a Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeService.CreateAttribute(Rock.Models.Core.Attribute)">
            <summary>
            Creates a new Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.IAttributeService.DeleteAttribute(System.String)">
            <summary>
            Deletes a Attribute object
            </summary>
        </member>
        <member name="T:Rock.Api.Core.AttributeService">
            <summary>
            REST WCF service for Attributes
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeService.Get(System.String)">
            <summary>
            Gets a Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeService.UpdateAttribute(System.String,Rock.Models.Core.Attribute)">
            <summary>
            Updates a Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeService.CreateAttribute(Rock.Models.Core.Attribute)">
            <summary>
            Creates a new Attribute object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeService.DeleteAttribute(System.String)">
            <summary>
            Deletes a Attribute object
            </summary>
        </member>
        <member name="T:Rock.Address.IStandardizeServiceData">
            <summary>
            Metadata interface used by the MEF import/export signatures
            </summary>
        </member>
        <member name="P:Rock.Address.IStandardizeServiceData.ServiceName">
            <summary>
            Gets the name of the service.
            </summary>
            <value>
            The name of the service.
            </value>
        </member>
        <member name="T:Rock.Api.Cms.AuthService">
            <summary>
            REST WCF service for Auths
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.AuthService.Get(System.String)">
            <summary>
            Gets a Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.AuthService.UpdateAuth(System.String,Rock.Models.Cms.Auth)">
            <summary>
            Updates a Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.AuthService.CreateAuth(Rock.Models.Cms.Auth)">
            <summary>
            Creates a new Auth object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.AuthService.DeleteAuth(System.String)">
            <summary>
            Deletes a Auth object
            </summary>
        </member>
        <member name="T:Rock.Services.Cms.BlogCategoryService">
            <summary>
            Blog Category POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Repository.Cms.EntityFileRepository">
            <summary>
            File POCO Repository class
            </summary>
        </member>
        <member name="T:Rock.Models.Crm.PersonConfiguration">
            <summary>
            Person Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Crm.PersonConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Crm.PersonConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.BlogCategory">
            <summary>
            Blog Category POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.BlogId">
            <summary>
            Gets or sets the Blog Id.
            </summary>
            <value>
            Blog Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.BlogPosts">
            <summary>
            Gets or sets the Blog Posts.
            </summary>
            <value>
            Collection of Blog Posts.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.Blog">
            <summary>
            Gets or sets the Blog.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Cms.BlogCategory.Blog"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.BlogCategory.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogCategoryConfiguration">
            <summary>
            Blog Category Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlogCategoryConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlogCategoryConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.Blog">
            <summary>
            Blog POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Blog.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.Subtitle">
            <summary>
            Gets or sets the Subtitle.
            </summary>
            <value>
            Subtitle.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.ModerateComments">
            <summary>
            Gets or sets the Moderate Comments.
            </summary>
            <value>
            Moderate Comments.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.PublicPublishingPoint">
            <summary>
            Gets or sets the Public Publishing Point.
            </summary>
            <value>
            Public Publishing Point.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.PublicFeedAddress">
            <summary>
            Gets or sets the Public Feed Address.
            </summary>
            <value>
            Public Feed Address.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.CopyrightStatement">
            <summary>
            Gets or sets the Copyright Statement.
            </summary>
            <value>
            Copyright Statement.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.AllowComments">
            <summary>
            Gets or sets the Allow Comments.
            </summary>
            <value>
            Allow Comments.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Cms.Blog.BlogCategories">
            <summary>
            Gets or sets the Blog Categories.
            </summary>
            <value>
            Collection of Blog Categories.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.BlogPosts">
            <summary>
            Gets or sets the Blog Posts.
            </summary>
            <value>
            Collection of Blog Posts.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.BlogTags">
            <summary>
            Gets or sets the Blog Tags.
            </summary>
            <value>
            Collection of Blog Tags.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Cms.Blog.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlogConfiguration">
            <summary>
            Blog Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlogConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Jobs.TestJob">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.TestJob.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.TestJob.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Controls.DeleteField">
            <summary>
            <see cref="T:Rock.Controls.Grid"/> Column for deleting a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Controls.DeleteField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="M:Rock.Controls.DeleteField.deleteFieldTemplate_LinkButtonClick(System.Object,Rock.Controls.RowEventArgs)">
            <summary>
            Handles the LinkButtonClick event of the deleteFieldTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Controls.DeleteField.OnClick(Rock.Controls.RowEventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Controls.DeleteField.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="T:Rock.Controls.DeleteFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Controls.DeleteField"/> control
            </summary>
        </member>
        <member name="M:Rock.Controls.DeleteFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Controls.DeleteFieldTemplate.lbDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbDelete control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Controls.DeleteFieldTemplate.LinkButtonClick">
            <summary>
            Occurs when [link button click].
            </summary>
        </member>
        <member name="T:Rock.Cms.RockRouteHandler">
            <summary>
            Rock custom route handler
            </summary>
        </member>
        <member name="M:Rock.Cms.RockRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Determine the logical page being requested by evaluating the routedata, or querystring and
            then loading the appropriate layout (ASPX) page
            </summary>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.Cms.Cached.BlockInstance">
            <summary>
            Information about a blockInstance that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.#ctor">
            <summary>
            Use Static Read() method to instantiate a new BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.ReloadAttributeValues">
            <summary>
            Reloads the attribute values.
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.Read(Rock.Models.Cms.BlockInstance)">
            <summary>
            Adds BlockInstance model to cache, and returns cached object
            </summary>
            <param name="blockInstanceModel"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.Read(System.Int32)">
            <summary>
            Returns BlockInstance object from cache.  If blockInstance does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.Flush(System.Int32)">
            <summary>
            Removes blockInstance from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.Authorized(System.String,System.Web.Security.MembershipUser)">
            <summary>
            Returns <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.BlockInstance.DefaultAuthorization(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            returna <c>true</c> if they will be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Zone">
            <summary>
            Gets the zone.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.OutputCacheDuration">
            <summary>
            Gets the duration of the output cache. If value is 0, the output will not be cached
            </summary>
            <value>
            The duration of the output cache.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.AttributeValues">
            <summary>
            Dictionary of all attributes and their values.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Attributes">
            <summary>
            List of attributes associated with the BlockInstance.  This object will not include values.
            To get values associated with the current page instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.BlockId">
            <summary>
            Gets the block id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.Block">
            <summary>
            Gets the block.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.AuthEntity">
            <summary>
            The auth entity. The auth entity is a unique identifier for each type of class that implements
            the <see cref="T:Rock.Cms.Security.ISecured"/> interface.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.BlockInstance.SupportedActions">
            <summary>
            The list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlogPostService">
            <summary>
            REST WCF service for BlogPosts
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostService.Get(System.String)">
            <summary>
            Gets a BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostService.UpdateBlogPost(System.String,Rock.Models.Cms.BlogPost)">
            <summary>
            Updates a BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostService.CreateBlogPost(Rock.Models.Cms.BlogPost)">
            <summary>
            Creates a new BlogPost object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogPostService.DeleteBlogPost(System.String)">
            <summary>
            Deletes a BlogPost object
            </summary>
        </member>
        <member name="T:Rock.Models.Core.Attribute">
            <summary>
            Attribute POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.Attribute.GetValue(System.Int32)">
            <summary>
            Gets the value of an attribute
            </summary>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Models.Core.Attribute.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.FieldTypeId">
            <summary>
            Gets or sets the Field Type Id.
            </summary>
            <value>
            Field Type Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.Entity">
            <summary>
            Gets or sets the Entity.
            </summary>
            <value>
            Entity.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.EntityQualifierColumn">
            <summary>
            Gets or sets the Entity Qualifier Column.
            </summary>
            <value>
            Entity Qualifier Column.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.EntityQualifierValue">
            <summary>
            Gets or sets the Entity Qualifier Value.
            </summary>
            <value>
            Entity Qualifier Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.Key">
            <summary>
            Gets or sets the Key.
            </summary>
            <value>
            Key.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.GridColumn">
            <summary>
            Gets or sets the Grid Column.
            </summary>
            <value>
            Grid Column.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.DefaultValue">
            <summary>
            Gets or sets the Default Value.
            </summary>
            <value>
            Default Value.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.Attribute.AttributeQualifiers">
            <summary>
            Gets or sets the Attribute Qualifiers.
            </summary>
            <value>
            Collection of Attribute Qualifiers.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.AttributeValues">
            <summary>
            Gets or sets the Attribute Values.
            </summary>
            <value>
            Collection of Attribute Values.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.FieldType">
            <summary>
            Gets or sets the Field Type.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Core.Attribute.FieldType"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.Attribute.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Cms.BlockInstanceConfiguration">
            <summary>
            Block Instance Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.BlockInstanceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.BlockInstanceConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Api.Groups.GroupTypeService">
            <summary>
            REST WCF service for GroupTypes
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupTypeService.Get(System.String)">
            <summary>
            Gets a GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupTypeService.UpdateGroupType(System.String,Rock.Models.Groups.GroupType)">
            <summary>
            Updates a GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupTypeService.CreateGroupType(Rock.Models.Groups.GroupType)">
            <summary>
            Creates a new GroupType object
            </summary>
        </member>
        <member name="M:Rock.Api.Groups.GroupTypeService.DeleteGroupType(System.String)">
            <summary>
            Deletes a GroupType object
            </summary>
        </member>
        <member name="T:Rock.Address.GeocodeContainer">
            <summary>
            Singleton class that uses MEF to load and cache all of the GeocodeService classes
            </summary>
        </member>
        <member name="M:Rock.Address.GeocodeContainer.Refresh">
            <summary>
            Forces a reloading of all the GeocodeService classes
            </summary>
        </member>
        <member name="P:Rock.Address.GeocodeContainer.Services">
            <summary>
            Gets the services.
            </summary>
        </member>
        <member name="P:Rock.Address.GeocodeContainer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Rock.Jobs.JobLoadFailedException">
            <summary>
            Job failed to load exception
            </summary>
        </member>
        <member name="M:Rock.Jobs.JobLoadFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Jobs.JobLoadFailedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Rock.Services.Crm.PhoneNumberService">
            <summary>
            Phone Number POCO Service Layer class
            </summary>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.Location">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Tract">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Block">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.Level">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location.LevelDescription">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.Err">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Err.Desc">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Err.Number">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Err.Location">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.DistanceBetweenInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceBetweenInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceBetweenInfo.MilesBetween">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceBetweenInfo.KilometersBetween">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceBetweenInfo.FeetBetween">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.MilesToWater">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.ClosestWaterLatitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.DistanceToWaterInfo.ClosestWaterLongitude">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.Address">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ReverseAddress.County">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Region">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Country">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Error">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.City">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.State">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.County">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.AreaCode">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.CityAbbreviation">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.CityType">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.CountyFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.StateFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.TimeZone">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.DayLightSavings">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.MSA">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.MD">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.CBSA">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.PMSA">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.DMA">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.ZipCodeInfo.CityAlternativeName">
            <remarks/>
        </member>
        <member name="T:Rock.Framework.ServiceObjects.GeoCoder.Location_V3">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Error">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Tract">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Block">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Level">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.LevelDescription">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.StateFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.CountyFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.Framework.ServiceObjects.GeoCoder.Location_V3.Debug">
            <remarks/>
        </member>
        <member name="T:Rock.Models.Util.JobConfiguration">
            <summary>
            Job Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Util.JobConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Util.JobConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Cms.UserConfiguration">
            <summary>
            User Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Cms.UserConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Cms.UserConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Controls.ReorderField">
            <summary>
            <see cref="T:Rock.Controls.Grid"/> Column for reordering rows in a grid
            </summary>
        </member>
        <member name="M:Rock.Controls.ReorderField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="T:Rock.Controls.ReorderFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Controls.ReorderField"/> control
            </summary>
        </member>
        <member name="M:Rock.Controls.ReorderFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="T:Rock.Cms.Security.Role">
            <summary>
            Information about a Role that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.Role.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Role object
            </summary>
        </member>
        <member name="M:Rock.Cms.Security.Role.UserInRole(System.String)">
            <summary>
            Is user in role
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Role.Read(System.String)">
            <summary>
            Returns Role object from cache.  If role does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="roleGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Role.AllRoles">
            <summary>
            Returns a list of all the possible Roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Security.Role.Flush(System.Guid)">
            <summary>
            Removes role from cache
            </summary>
            <param name="guid"></param>
        </member>
        <member name="P:Rock.Cms.Security.Role.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.Role.Guid">
            <summary>
            Gets the GUID.
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.Role.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Cms.Security.Role.Users">
            <summary>
            Gets the users that belong to the role
            </summary>
        </member>
        <member name="T:Rock.Cms.Cached.Block">
            <summary>
            Information about a block that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Block.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Block object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Block.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Cms.Cached.Block.Read(System.Int32)">
            <summary>
            Returns Block object from cache.  If block does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Block.Flush(System.Int32)">
            <summary>
            Removes block from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Cms.Cached.Block.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Block.Path">
            <summary>
            Gets the path to the block control
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Block.Name">
            <summary>
            Gets the name of block
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Block.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Block.InstancePropertiesVerified">
            <summary>
            Gets a value indicating whether the <see cref="T:Rock.Attribute.PropertyAttribute"/> attributes have been 
            verified for the block.  If not, Rock will create and/or update the attributes associated with the block.
            </summary>
            <value>
            	<c>true</c> if attributes have already been verified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Block.Attributes">
            <summary>
            List of attributes associated with the block.  This object will not include values.
            To get values associated with the current block instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Block.AttributeValues">
            <summary>
            Gets the attribute values.
            </summary>
        </member>
        <member name="T:Rock.Api.Util.JobService">
            <summary>
            REST WCF service for Jobs
            </summary>
        </member>
        <member name="M:Rock.Api.Util.JobService.Get(System.String)">
            <summary>
            Gets a Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.JobService.UpdateJob(System.String,Rock.Models.Util.Job)">
            <summary>
            Updates a Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.JobService.CreateJob(Rock.Models.Util.Job)">
            <summary>
            Creates a new Job object
            </summary>
        </member>
        <member name="M:Rock.Api.Util.JobService.DeleteJob(System.String)">
            <summary>
            Deletes a Job object
            </summary>
        </member>
        <member name="T:Rock.Api.ServiceHelper">
            <summary>
            Helper class that is used by the Global.ascx.cs class to load all <see cref="T:Rock.Api.IService"/> 
            classes found through MEF and add service routes for them.  
            </summary>
        </member>
        <member name="M:Rock.Api.ServiceHelper.AddRoutes(System.Web.Routing.RouteCollection)">
            <summary>
            Adds service routes for every <see cref="T:Rock.Api.IService"/> class found through MEF.
            </summary>
            <param name="routes">The route collection.</param>
        </member>
        <member name="M:Rock.Api.ServiceHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Api.ServiceHelper"/> class.  Creates the MEF catalog
            and container.  Will load all <see cref="T:Rock.Api.IService"/> classes in the Rock.Framework or any dll in 
            the Extensions folder
            </summary>
            <param name="extensionFolder">The extension folder.</param>
        </member>
        <member name="T:Rock.Address.Geocode.ServiceObjects">
            <summary>
            Geocoder service from <a href="http://www.serviceobjects.com">ServiceObjects</a>
            </summary>
        </member>
        <member name="M:Rock.Address.Geocode.ServiceObjects.Geocode(Rock.Models.Crm.Address,System.String@)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The ServiceObjects result.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="T:Rock.Api.Cms.SiteDomainService">
            <summary>
            REST WCF service for SiteDomains
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteDomainService.Get(System.String)">
            <summary>
            Gets a SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteDomainService.UpdateSiteDomain(System.String,Rock.Models.Cms.SiteDomain)">
            <summary>
            Updates a SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteDomainService.CreateSiteDomain(Rock.Models.Cms.SiteDomain)">
            <summary>
            Creates a new SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.SiteDomainService.DeleteSiteDomain(System.String)">
            <summary>
            Deletes a SiteDomain object
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.BlogTagService">
            <summary>
            REST WCF service for BlogTags
            </summary>
        </member>
        <member name="T:Rock.Api.Cms.IBlogTagService">
            <summary>
            Represents a REST WCF service for BlogTags
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogTagService.Get(System.String)">
            <summary>
            Gets a BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogTagService.UpdateBlogTag(System.String,Rock.Models.Cms.BlogTag)">
            <summary>
            Updates a BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogTagService.CreateBlogTag(Rock.Models.Cms.BlogTag)">
            <summary>
            Creates a new BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.IBlogTagService.DeleteBlogTag(System.String)">
            <summary>
            Deletes a BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogTagService.Get(System.String)">
            <summary>
            Gets a BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogTagService.UpdateBlogTag(System.String,Rock.Models.Cms.BlogTag)">
            <summary>
            Updates a BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogTagService.CreateBlogTag(Rock.Models.Cms.BlogTag)">
            <summary>
            Creates a new BlogTag object
            </summary>
        </member>
        <member name="M:Rock.Api.Cms.BlogTagService.DeleteBlogTag(System.String)">
            <summary>
            Deletes a BlogTag object
            </summary>
        </member>
        <member name="T:Rock.Services.Core.AttributeValueService">
            <summary>
            Attribute Value POCO Service Layer class
            </summary>
        </member>
        <member name="M:Rock.Services.Core.AttributeValueService.GetByAttributeIdAndEntityId(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets Attribute Value by Attribute Id And Entity Id
            </summary>
            <param name="attributeId">Attribute Id.</param>
            <param name="entityId">Entity Id.</param>
            <returns>AttributeValue object.</returns>
        </member>
        <member name="M:Rock.Services.Core.AttributeValueService.GetByEntityId(System.Nullable{System.Int32})">
            <summary>
            Gets Attribute Values by Entity Id
            </summary>
            <param name="entityId">Entity Id.</param>
            <returns>An enumerable list of AttributeValue objects.</returns>
        </member>
        <member name="M:Rock.Services.Core.AttributeValueService.GetByGuid(System.Guid)">
            <summary>
            Gets Attribute Values by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>An enumerable list of AttributeValue objects.</returns>
        </member>
        <member name="T:Rock.Models.Core.DefinedValue">
            <summary>
            Defined Value POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.System">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.DefinedTypeId">
            <summary>
            Gets or sets the Defined Type Id.
            </summary>
            <value>
            Defined Type Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.DefinedType">
            <summary>
            Gets or sets the Defined Type.
            </summary>
            <value>
            A <see cref="P:Rock.Models.Core.DefinedValue.DefinedType"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Models.Core.DefinedValue.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.Models.Crm.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Models.Core.DefinedValueConfiguration">
            <summary>
            Defined Value Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.DefinedValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.DefinedValueConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Models.Core.AttributeConfiguration">
            <summary>
            Attribute Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Models.Core.AttributeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Models.Core.AttributeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Cms.Cached.Attribute">
            <summary>
            Information about an attribute that is required by the rendering engine.
            This information will be cached by Rock
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Attribute object
            </summary>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.CreateControl(System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:System.Web.UI.Control"/> based on the attribute's field type.
            </summary>
            <param name="value">The value.</param>
            <param name="setValue">if set to <c>true</c> set the control's value</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.Read(Rock.Models.Core.Attribute)">
            <summary>
            Adds Attribute model to cache, and returns cached object
            </summary>
            <param name="attributeModel">The attributeModel to cache</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.Read(System.Int32)">
            <summary>
            Returns Attribute object from cache.  If attribute does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id">The id of the Attribute to read</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.CopyModel(Rock.Models.Core.Attribute)">
            <summary>
            Copies the properties of a <see cref="T:Rock.Models.Core.Attribute"/> object to a <see cref="T:Rock.Cms.Cached.Attribute"/> object/&gt;
            </summary>
            <param name="attributeModel">The attribute model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Cms.Cached.Attribute.Flush(System.Int32)">
            <summary>
            Removes attribute from cache
            </summary>
            <param name="id">The id of the attribute to remove from cache</param>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.GridColumn">
            <summary>
            Gets a value indicating if this attribute should be displayed in a column when this attribute's parent object is
            listed in a grid.
            </summary>
            <value>
              <c>true</c> if it should be added as a column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.DefaultValue">
            <summary>
            Gets the default value for the attribute
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.QualifierValues">
            <summary>
            Gets the qualifier values if any have been defined for the attribute
            </summary>
        </member>
        <member name="P:Rock.Cms.Cached.Attribute.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="T:Rock.Api.Core.AttributeValueService">
            <summary>
            REST WCF service for AttributeValues
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeValueService.Get(System.String)">
            <summary>
            Gets a AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeValueService.UpdateAttributeValue(System.String,Rock.Models.Core.AttributeValue)">
            <summary>
            Updates a AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeValueService.CreateAttributeValue(Rock.Models.Core.AttributeValue)">
            <summary>
            Creates a new AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Api.Core.AttributeValueService.DeleteAttributeValue(System.String)">
            <summary>
            Deletes a AttributeValue object
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.IFieldType">
            <summary>
            Interface that a custom field type must implement
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.IFieldType.FormatValue(System.String,System.Boolean)">
            <summary>
            Formats the value based on the type and qualifiers
            </summary>
            <param name="value">The value.</param>
            <param name="condensed">if set to <c>true</c> [condensed].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.IFieldType.CreateControl(System.String,System.Boolean)">
            <summary>
            Creates an HTML control.
            </summary>
            <param name="value">The value.</param>
            <param name="setValue">if set to <c>true</c> [set value].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.IFieldType.ReadValue(System.Web.UI.Control)">
            <summary>
            Reads the value of the control.
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.FieldTypes.IFieldType.Qualifiers">
            <summary>
            Gets the qualifiers.
            </summary>
        </member>
        <member name="P:Rock.FieldTypes.IFieldType.QualifierValues">
            <summary>
            Gets or sets the qualifier values.
            </summary>
            <value>
            The qualifier values. The Dictionary's key contains the qualifier key, the KeyValuePair's
            key contains the qualifier name, and the KeyValuePair's value contains the qualifier 
            value
            </value>
        </member>
        <member name="T:Rock.FieldTypes.Boolean">
            <summary>
            Field Type used to display a list of options as checkboxes.  Value is saved as a | delimited list
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.Field">
            <summary>
            Abstract class that all custom field types should inherit from
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.Field.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.FieldTypes.Field"/> class.
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.Field.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.FieldTypes.Field"/> class.
            </summary>
            <param name="qualifierValues">The qualifier values.</param>
        </member>
        <member name="M:Rock.FieldTypes.Field.FormatValue(System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Field.IsValid(System.String,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Field.CreateControl(System.String,System.Boolean)">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="value">The current value</param>
            <param name="setValue">Should the control's value be set</param>
            <returns>The control</returns>
        </member>
        <member name="M:Rock.FieldTypes.Field.ReadValue(System.Web.UI.Control)">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control">Parent control that controls were added to in the RenderEdit() method</param>
            <returns></returns>
        </member>
        <member name="P:Rock.FieldTypes.Field.QualifierValues">
            <summary>
            Gets or sets the qualifier values.
            </summary>
            <value>
            The qualifier values. The Dictionary's key contains the qualifier key, the KeyValuePair's
            key contains the qualifier name, and the KeyValuePair's value contains the qualifier
            value
            </value>
        </member>
        <member name="P:Rock.FieldTypes.Field.Qualifiers">
            <summary>
            Gets the qualifiers.
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.Boolean.FormatValue(System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="value"></param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Boolean.IsValid(System.String,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Boolean.CreateControl(System.String,System.Boolean)">
            <summary>
            Renders the controls neccessary for prompting user for a new value and adds them to the parentControl
            </summary>
            <param name="value"></param>
            <param name="setValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Boolean.ReadValue(System.Web.UI.Control)">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.FieldTypes.Text">
            <summary>
            Field used to save and dispaly a text value
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.SelectSingle">
            <summary>
            Field Type used to display a dropdown list of System.Drawing.Color options
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.SelectSingle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.FieldTypes.SelectSingle"/> class.
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.SelectSingle.#ctor(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.FieldTypes.SelectSingle"/> class.
            </summary>
            <param name="qualifierValues">The qualifier values.</param>
        </member>
        <member name="M:Rock.FieldTypes.SelectSingle.IsValid(System.String,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.SelectSingle.CreateControl(System.String,System.Boolean)">
            <summary>
            Renders the controls neccessary for prompting user for a new value and adds them to the parentControl
            </summary>
            <param name="value"></param>
            <param name="setValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.SelectSingle.ReadValue(System.Web.UI.Control)">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="P:Rock.FieldTypes.SelectSingle.Qualifiers">
            <summary>
            Gets the qualifiers.
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.SelectMulti">
            <summary>
            Field Type used to display a list of options as checkboxes.  Value is saved as a | delimited list
            </summary>
        </member>
        <member name="P:Rock.FieldTypes.SelectMulti.Qualifiers">
            <summary>
            Gets the qualifiers.
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.Color">
            <summary>
            Field Type used to display a dropdown list of System.Drawing.Color options
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.Color.CreateControl(System.String,System.Boolean)">
            <summary>
            Renders the controls neccessary for prompting user for a new value and adds them to the parentControl
            </summary>
            <param name="value"></param>
            <param name="setValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.FieldTypes.Color.ReadValue(System.Web.UI.Control)">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.FieldTypes.Integer">
            <summary>
            Field used to save and dispaly a numeric value
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.Integer.IsValid(System.String,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.FieldTypes.FieldQualifier">
            <summary>
            Used to define a <see cref="P:Rock.FieldTypes.FieldQualifier.Field"/> qualifier
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.FieldQualifier.#ctor(System.String,System.String,System.String,Rock.FieldTypes.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.FieldTypes.FieldQualifier"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="field">The field.</param>
        </member>
        <member name="P:Rock.FieldTypes.FieldQualifier.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Rock.FieldTypes.FieldQualifier.Name">
            <summary>
            Gets the name of the qualifier
            </summary>
        </member>
        <member name="P:Rock.FieldTypes.FieldQualifier.Description">
            <summary>
            Gets the description of the qualifier
            </summary>
        </member>
        <member name="P:Rock.FieldTypes.FieldQualifier.Field">
            <summary>
            Instantiates the field type
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.PageReference">
            <summary>
            Field used to save and dispaly a page reference
            </summary>
        </member>
        <member name="T:Rock.FieldTypes.FieldHelper">
            <summary>
            Helper class for use with <see cref="T:Rock.FieldTypes.IFieldType"/> classes
            </summary>
        </member>
        <member name="M:Rock.FieldTypes.FieldHelper.InstantiateFieldType(System.String,System.String)">
            <summary>
            Instantiates an instance of a specific field type based on the assembly and class name of the field type
            </summary>
            <param name="assembly">Assembly Name (i.e. Rock.Framework)</param>
            <param name="typeName">Class Name (i.e. Rock.FieldTypes.Text)</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Services.Cms.ThemeService">
            <summary>
            TODO:  The ThemeService is no longer used.  These methods need to be moved someplace
            else.  The Site list module uses them
            </summary>
        </member>
        <member name="M:Rock.Services.Cms.ThemeService.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Services.Cms.ThemeService"/> class.
            </summary>
            <param name="rootPath">The root path.</param>
        </member>
        <member name="M:Rock.Services.Cms.ThemeService.GetThemesNames">
            <summary>
            Returns the valid themes found in this installation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.Cms.ThemeService.GetThemeLayoutNames(System.String)">
            <summary>
            Gets the theme layout names.
            </summary>
            <param name="themeName">Name of the theme.</param>
            <returns></returns>
        </member>
    </members>
</doc>
