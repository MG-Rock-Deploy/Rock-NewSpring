//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using Rock.Models.Core;
using Rock.Repository.Core;

namespace Rock.Services.Core
{
    public partial class AttributeValueService : Rock.Services.Service<Rock.Models.Core.AttributeValue>
    {
        public Rock.Models.Core.AttributeValue GetByAttributeIdAndEntityId( int attributeId, int? entityId )
        {
            return Repository.FirstOrDefault( t => t.AttributeId == attributeId && ( t.EntityId == entityId || ( entityId == null && t.EntityId == null ) ) );
        }
		
        public IEnumerable<Rock.Models.Core.AttributeValue> GetByEntityId( int? entityId )
        {
            return Repository.Find( t => ( t.EntityId == entityId || ( entityId == null && t.EntityId == null ) ) );
        }
		
        public IEnumerable<Rock.Models.Core.AttributeValue> GetByGuid( Guid guid )
        {
            return Repository.Find( t => t.Guid == guid );
        }
		
    }
}
